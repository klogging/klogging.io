"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[387],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),g=a,f=c["".concat(s,".").concat(g)]||c[g]||d[g]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},4891:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],l={sidebar_position:40},s="Built-in configurations",p={unversionedId:"configuration/built-ins",id:"configuration/built-ins",title:"Built-in configurations",description:"Klogging provides a number of built-in configurations.",source:"@site/docs/configuration/built-ins.md",sourceDirName:"configuration",slug:"/configuration/built-ins",permalink:"/docs/configuration/built-ins",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Configuration with HOCON",permalink:"/docs/configuration/hocon"},next:{title:"Context Items",permalink:"/docs/configuration/context-items"}},u={},c=[{value:"Rendering",id:"rendering",level:2},{value:"RENDER_SIMPLE",id:"render_simple",level:3},{value:"RENDER_ISO8601",id:"render_iso8601",level:3},{value:"RENDER_ANSI",id:"render_ansi",level:3},{value:"RENDER_CLEF",id:"render_clef",level:3},{value:"RENDER_GELF",id:"render_gelf",level:3},{value:"Sending",id:"sending",level:2},{value:"STDOUT",id:"stdout",level:3},{value:"STDERR",id:"stderr",level:3},{value:"Rendering and sending",id:"rendering-and-sending",level:2},{value:"DEFAULT_CONSOLE",id:"default_console",level:3},{value:"ANSI_CONSOLE",id:"ansi_console",level:3}],d={toc:c},g="wrapper";function f(e){var n=e.components,l=(0,a.Z)(e,o);return(0,i.kt)(g,(0,r.Z)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"built-in-configurations"},"Built-in configurations"),(0,i.kt)("p",null,"Klogging provides a number of built-in configurations."),(0,i.kt)("h2",{id:"rendering"},"Rendering"),(0,i.kt)("h3",{id:"render_simple"},"RENDER_SIMPLE"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderString")," instance that renders log events as string messages suitable for a\nconsole. Examples are:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2021-09-04 17:10:08.118921 INFO [DefaultDispatcher-worker-6] io.klogging.example.KloggerPlaypen : >> 1 : {run=4f1f9871-bbe9-4dcd-a778-c770d117010c, Counter=1}\n2021-09-04 17:10:08.162969 INFO [DefaultDispatcher-worker-2] io.klogging.example.KloggerPlaypen : << 1 : {run=4f1f9871-bbe9-4dcd-a778-c770d117010c, Counter=1}\n2021-09-04 17:10:08.163054 INFO [DefaultDispatcher-worker-5] io.klogging.example.KloggerPlaypen : Event 1 at 2021-09-04T17:10:08.162985 : {run=4f1f9871-bbe9-4dcd-a778-c770d117010c, Counter=1, Iteration=1, RightNow=2021-09-04T17:10:08.162985}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The timestamp is in the server\u2019s local time zone."),(0,i.kt)("li",{parentName:"ul"},"If there are ",(0,i.kt)("inlineCode",{parentName:"li"},"items")," as part of the ",(0,i.kt)("a",{parentName:"li",href:"../concepts/log-events"},"log event"),", the keys and values are printed at the end of\nthe line in curly braces."),(0,i.kt)("li",{parentName:"ul"},"If there is a stack trace as part of the log event, it is printed starting on the next line.")),(0,i.kt)("h3",{id:"render_iso8601"},"RENDER_ISO8601"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderString")," instance that renders log events as string messages like ",(0,i.kt)("inlineCode",{parentName:"p"},"RENDER_SIMPLE")," but with\ntimestamps in ISO8601 format. Examples are:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2023-07-27T22:46:58.363519Z INFO [DefaultDispatcher-worker-4+Playpen] io.klogging.example.KloggerPlaypen : << 1 : {app=Playpen, run=2235f5a2-7920-4446-9fa3-bd127493772e, Counter=1}\n2023-07-27T22:46:58.365417Z INFO [DefaultDispatcher-worker-4+Playpen] io.klogging.example.KloggerPlaypen : >> 2 : {app=Playpen, run=2235f5a2-7920-4446-9fa3-bd127493772e, Counter=2}\n2023-07-27T22:46:58.365559Z INFO [DefaultDispatcher-worker-4+Playpen] io.klogging.example.KloggerPlaypen : Event 1 at 2023-07-28T08:46:58.365536 : {app=Playpen, run=2235f5a2-7920-4446-9fa3-bd127493772e, Counter=2, Iteration=1, RightNow=2023-07-28T08:46:58.365536}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The timestamp is an ISO8601 timestamp in UTC."),(0,i.kt)("li",{parentName:"ul"},"If there are ",(0,i.kt)("inlineCode",{parentName:"li"},"items")," as part of the ",(0,i.kt)("a",{parentName:"li",href:"../concepts/log-events"},"log event"),", the keys and values are printed at the end of\nthe line in curly braces."),(0,i.kt)("li",{parentName:"ul"},"If there is a stack trace as part of the log event, it is printed starting on the next line.")),(0,i.kt)("h3",{id:"render_ansi"},"RENDER_ANSI"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderString")," instance that renders log events as string messages for a console like ",(0,i.kt)("inlineCode",{parentName:"p"},"RENDER_SIMPLE")," but with\nlogging levels with colour highlights, for example:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Example of RENDER_ANSI output",src:t(3015).Z,width:"2072",height:"364"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Only the time portion of the timestamp is shown."),(0,i.kt)("li",{parentName:"ul"},"Logging levels are colour-coded and right-aligned in a 5-character column."),(0,i.kt)("li",{parentName:"ul"},"Context information is right-aligned in a 20-character column in square brackets."),(0,i.kt)("li",{parentName:"ul"},"Logger names are right-aligned in a 20-character column. Package names are abbreviated if they do not fit in the space."),(0,i.kt)("li",{parentName:"ul"},"Log event ",(0,i.kt)("inlineCode",{parentName:"li"},"items")," are included in curly braces, if present."),(0,i.kt)("li",{parentName:"ul"},"Stack traces, if present, start on the next line.")),(0,i.kt)("h3",{id:"render_clef"},"RENDER_CLEF"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderString")," instance that converts log events into JSON using\n",(0,i.kt)("a",{parentName:"p",href:"https://clef-json.org/"},"Compact Log Event Format")," for dispatching to a\n",(0,i.kt)("a",{parentName:"p",href:"https://datalust.co/seq"},"Seq server"),". An example is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@t": "2021-08-14T11:13:53.068816Z",\n  "@l": "INFO",\n  "@mt": ">> {Counter}",\n  "host": "MikeBook",\n  "logger": "Playpen",\n  "Counter": "1",\n  "run": "a6f72c37-7e2f-4d69-a73f-7f493cb04d1d",\n  "context": "DefaultDispatcher-worker-3"\n}\n')),(0,i.kt)("p",null,"In Seq it is shown like this:"),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(3191).Z,width:"1402",height:"316"})),(0,i.kt)("h3",{id:"render_gelf"},"RENDER_GELF"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderString")," instance that converts log events into JSON using\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.graylog.org/en/latest/pages/gelf.html#gelf-payload-specification"},"Graylog Extended Log Format"),"\nfor dispatching to a ",(0,i.kt)("a",{parentName:"p",href:"https://www.graylog.org"},"Graylog server"),".\nAn example is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "1.1",\n  "host": "MikeBook",\n  "short_message": ">> 1",\n  "timestamp": 1628939552.786044,\n  "level": 6,\n  "_Counter": "1",\n  "_run": "f02ec82a-616c-4d2f-8ccb-c14c0a771f67",\n  "_logger": "Playpen"\n}\n')),(0,i.kt)("h2",{id:"sending"},"Sending"),(0,i.kt)("h3",{id:"stdout"},"STDOUT"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"SendString")," instance that prints strings to the standard output stream."),(0,i.kt)("h3",{id:"stderr"},"STDERR"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"SendString")," instance that prints strings to the standard error stream."),(0,i.kt)("h2",{id:"rendering-and-sending"},"Rendering and sending"),(0,i.kt)("h3",{id:"default_console"},"DEFAULT_CONSOLE"),(0,i.kt)("p",null,"A sink configuration that renders using ",(0,i.kt)("inlineCode",{parentName:"p"},"RENDER_SIMPLE")," and sends using ",(0,i.kt)("inlineCode",{parentName:"p"},"STDOUT")," to a sink\ncalled ",(0,i.kt)("inlineCode",{parentName:"p"},"console"),"."),(0,i.kt)("h3",{id:"ansi_console"},"ANSI_CONSOLE"),(0,i.kt)("p",null,"A sink configuration that renders using ",(0,i.kt)("inlineCode",{parentName:"p"},"RENDER_ANSI")," and sends using ",(0,i.kt)("inlineCode",{parentName:"p"},"STDOUT")," to a sink\ncalled ",(0,i.kt)("inlineCode",{parentName:"p"},"console"),"."))}f.isMDXComponent=!0},3191:function(e,n,t){n.Z=t.p+"assets/images/clef-json-in-seq-dbed21386597c05df849dc32c9f92811.png"},3015:function(e,n,t){n.Z=t.p+"assets/images/render-ansi-d1e9e42822b93c9130ac1ccbab62a2ef.png"}}]);