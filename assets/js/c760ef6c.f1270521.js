"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[931],{4114:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=r(4848),t=r(5680);const s={sidebar_position:40},l="Built-in configurations",a={id:"configuration/built-ins",title:"Built-in configurations",description:"Klogging provides a number of built-in configurations.",source:"@site/docs/configuration/built-ins.md",sourceDirName:"configuration",slug:"/configuration/built-ins",permalink:"/docs/configuration/built-ins",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Configuration with HOCON",permalink:"/docs/configuration/hocon"},next:{title:"Context",permalink:"/docs/context/"}},o={},c=[{value:"Rendering",id:"rendering",level:2},{value:"RENDER_SIMPLE",id:"render_simple",level:3},{value:"RENDER_ISO8601",id:"render_iso8601",level:3},{value:"RENDER_ANSI",id:"render_ansi",level:3},{value:"RENDER_CLEF",id:"render_clef",level:3},{value:"RENDER_GELF",id:"render_gelf",level:3},{value:"Sending",id:"sending",level:2},{value:"STDOUT",id:"stdout",level:3},{value:"STDERR",id:"stderr",level:3},{value:"Rendering and sending",id:"rendering-and-sending",level:2},{value:"DEFAULT_CONSOLE",id:"default_console",level:3},{value:"ANSI_CONSOLE",id:"ansi_console",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.RP)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"built-in-configurations",children:"Built-in configurations"}),"\n",(0,i.jsx)(n.p,{children:"Klogging provides a number of built-in configurations."}),"\n",(0,i.jsx)(n.h2,{id:"rendering",children:"Rendering"}),"\n",(0,i.jsx)(n.h3,{id:"render_simple",children:"RENDER_SIMPLE"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"RenderString"})," instance that renders log events as string messages suitable for a\nconsole. Examples are:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"2021-09-04 17:10:08.118921 INFO [DefaultDispatcher-worker-6] io.klogging.example.KloggerPlaypen : >> 1 : {run=4f1f9871-bbe9-4dcd-a778-c770d117010c, Counter=1}\n2021-09-04 17:10:08.162969 INFO [DefaultDispatcher-worker-2] io.klogging.example.KloggerPlaypen : << 1 : {run=4f1f9871-bbe9-4dcd-a778-c770d117010c, Counter=1}\n2021-09-04 17:10:08.163054 INFO [DefaultDispatcher-worker-5] io.klogging.example.KloggerPlaypen : Event 1 at 2021-09-04T17:10:08.162985 : {run=4f1f9871-bbe9-4dcd-a778-c770d117010c, Counter=1, Iteration=1, RightNow=2021-09-04T17:10:08.162985}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The timestamp is in the server\u2019s local time zone."}),"\n",(0,i.jsxs)(n.li,{children:["If there are ",(0,i.jsx)(n.code,{children:"items"})," as part of the ",(0,i.jsx)(n.a,{href:"../concepts/log-events",children:"log event"}),", the keys and values are printed at the end of\nthe line in curly braces."]}),"\n",(0,i.jsx)(n.li,{children:"If there is a stack trace as part of the log event, it is printed starting on the next line."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"render_iso8601",children:"RENDER_ISO8601"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"RenderString"})," instance that renders log events as string messages like ",(0,i.jsx)(n.code,{children:"RENDER_SIMPLE"})," but with\ntimestamps in ISO8601 format. Examples are:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"2023-07-27T22:46:58.363519Z INFO [DefaultDispatcher-worker-4+Playpen] io.klogging.example.KloggerPlaypen : << 1 : {app=Playpen, run=2235f5a2-7920-4446-9fa3-bd127493772e, Counter=1}\n2023-07-27T22:46:58.365417Z INFO [DefaultDispatcher-worker-4+Playpen] io.klogging.example.KloggerPlaypen : >> 2 : {app=Playpen, run=2235f5a2-7920-4446-9fa3-bd127493772e, Counter=2}\n2023-07-27T22:46:58.365559Z INFO [DefaultDispatcher-worker-4+Playpen] io.klogging.example.KloggerPlaypen : Event 1 at 2023-07-28T08:46:58.365536 : {app=Playpen, run=2235f5a2-7920-4446-9fa3-bd127493772e, Counter=2, Iteration=1, RightNow=2023-07-28T08:46:58.365536}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The timestamp is an ISO8601 timestamp in UTC."}),"\n",(0,i.jsxs)(n.li,{children:["If there are ",(0,i.jsx)(n.code,{children:"items"})," as part of the ",(0,i.jsx)(n.a,{href:"../concepts/log-events",children:"log event"}),", the keys and values are printed at the end of\nthe line in curly braces."]}),"\n",(0,i.jsx)(n.li,{children:"If there is a stack trace as part of the log event, it is printed starting on the next line."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"render_ansi",children:"RENDER_ANSI"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"RenderString"})," instance that renders log events as string messages for a console like ",(0,i.jsx)(n.code,{children:"RENDER_SIMPLE"})," but with\nlogging levels with colour highlights, for example:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Example of RENDER_ANSI output",src:r(9865).A+"",width:"2072",height:"364"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Only the time portion of the timestamp is shown."}),"\n",(0,i.jsx)(n.li,{children:"Logging levels are colour-coded and right-aligned in a 5-character column."}),"\n",(0,i.jsx)(n.li,{children:"Context information is right-aligned in a 20-character column in square brackets."}),"\n",(0,i.jsx)(n.li,{children:"Logger names are right-aligned in a 20-character column. Package names are abbreviated if they do not fit in the space."}),"\n",(0,i.jsxs)(n.li,{children:["Log event ",(0,i.jsx)(n.code,{children:"items"})," are included in curly braces, if present."]}),"\n",(0,i.jsx)(n.li,{children:"Stack traces, if present, start on the next line."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"render_clef",children:"RENDER_CLEF"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"RenderString"})," instance that converts log events into JSON using\n",(0,i.jsx)(n.a,{href:"https://clef-json.org/",children:"Compact Log Event Format"})," for dispatching to a\n",(0,i.jsx)(n.a,{href:"https://datalust.co/seq",children:"Seq server"}),". An example is:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@t": "2021-08-14T11:13:53.068816Z",\n  "@l": "INFO",\n  "@mt": ">> {Counter}",\n  "host": "MikeBook",\n  "logger": "Playpen",\n  "Counter": "1",\n  "run": "a6f72c37-7e2f-4d69-a73f-7f493cb04d1d",\n  "context": "DefaultDispatcher-worker-3"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"In Seq it is shown like this:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:r(5358).A+"",width:"1402",height:"316"})}),"\n",(0,i.jsx)(n.h3,{id:"render_gelf",children:"RENDER_GELF"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"RenderString"})," instance that converts log events into JSON using\n",(0,i.jsx)(n.a,{href:"https://docs.graylog.org/en/latest/pages/gelf.html#gelf-payload-specification",children:"Graylog Extended Log Format"}),"\nfor dispatching to a ",(0,i.jsx)(n.a,{href:"https://www.graylog.org",children:"Graylog server"}),".\nAn example is:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "version": "1.1",\n  "host": "MikeBook",\n  "short_message": ">> 1",\n  "timestamp": 1628939552.786044,\n  "level": 6,\n  "_Counter": "1",\n  "_run": "f02ec82a-616c-4d2f-8ccb-c14c0a771f67",\n  "_logger": "Playpen"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"sending",children:"Sending"}),"\n",(0,i.jsx)(n.h3,{id:"stdout",children:"STDOUT"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"SendString"})," instance that prints strings to the standard output stream."]}),"\n",(0,i.jsx)(n.h3,{id:"stderr",children:"STDERR"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"SendString"})," instance that prints strings to the standard error stream."]}),"\n",(0,i.jsx)(n.h2,{id:"rendering-and-sending",children:"Rendering and sending"}),"\n",(0,i.jsx)(n.h3,{id:"default_console",children:"DEFAULT_CONSOLE"}),"\n",(0,i.jsxs)(n.p,{children:["A sink configuration that renders using ",(0,i.jsx)(n.code,{children:"RENDER_SIMPLE"})," and sends using ",(0,i.jsx)(n.code,{children:"STDOUT"})," to a sink\ncalled ",(0,i.jsx)(n.code,{children:"console"}),". It emits log events with severity ",(0,i.jsx)(n.code,{children:"INFO"})," and greater."]}),"\n",(0,i.jsx)(n.h3,{id:"ansi_console",children:"ANSI_CONSOLE"}),"\n",(0,i.jsxs)(n.p,{children:["A sink configuration that renders using ",(0,i.jsx)(n.code,{children:"RENDER_ANSI"})," and sends using ",(0,i.jsx)(n.code,{children:"STDOUT"})," to a sink\ncalled ",(0,i.jsx)(n.code,{children:"console"}),". It emits log events with severity ",(0,i.jsx)(n.code,{children:"INFO"})," and greater."]})]})}function h(e={}){const{wrapper:n}={...(0,t.RP)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},5680:(e,n,r)=>{r.d(n,{RP:()=>c});var i=r(6540);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,i)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,i,t=function(e,n){if(null==e)return{};var r,i,t={},s=Object.keys(e);for(i=0;i<s.length;i++)r=s[i],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)r=s[i],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var o=i.createContext({}),c=function(e){var n=i.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},h=i.forwardRef((function(e,n){var r=e.components,t=e.mdxType,s=e.originalType,o=e.parentName,h=a(e,["components","mdxType","originalType","parentName"]),g=c(r),p=t,u=g["".concat(o,".").concat(p)]||g[p]||d[p]||s;return r?i.createElement(u,l(l({ref:n},h),{},{components:r})):i.createElement(u,l({ref:n},h))}));h.displayName="MDXCreateElement"},5358:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/clef-json-in-seq-dbed21386597c05df849dc32c9f92811.png"},9865:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/render-ansi-d1e9e42822b93c9130ac1ccbab62a2ef.png"}}]);