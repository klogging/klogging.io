"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[65],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var g=r.createContext({}),c=function(e){var n=r.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(g.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,g=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=o,u=m["".concat(g,".").concat(d)]||m[d]||p[d]||i;return t?r.createElement(u,a(a({ref:n},s),{},{components:t})):r.createElement(u,a({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var g in n)hasOwnProperty.call(n,g)&&(l[g]=n[g]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5509:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return g},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={sidebar_position:10},g="Defining loggers",c={unversionedId:"loggers/defining-loggers",id:"loggers/defining-loggers",isDocsHomePage:!1,title:"Defining loggers",description:"Klogging provides a number of ways of defining loggers.",source:"@site/docs/loggers/defining-loggers.md",sourceDirName:"loggers",slug:"/loggers/defining-loggers",permalink:"/docs/loggers/defining-loggers",version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Built-in configurations",permalink:"/docs/configuration/built-ins"},next:{title:"Sending log events",permalink:"/docs/logging/sending-logs"}},s=[{value:"Implement <code>Klogging</code>",id:"implement-klogging",children:[]},{value:"Define a logger directly",id:"define-a-logger-directly",children:[]},{value:"Static reference",id:"static-reference",children:[]}],p={toc:s};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"defining-loggers"},"Defining loggers"),(0,i.kt)("p",null,"Klogging provides a number of ways of defining loggers."),(0,i.kt)("h2",{id:"implement-klogging"},"Implement ",(0,i.kt)("inlineCode",{parentName:"h2"},"Klogging")),(0,i.kt)("p",null,"The interface ",(0,i.kt)("inlineCode",{parentName:"p"},"io.klogging.Klogging")," includes a ",(0,i.kt)("inlineCode",{parentName:"p"},"logger")," property that returns a\n",(0,i.kt)("inlineCode",{parentName:"p"},"Klogger")," instance with the name of the class. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'package com.example\n\nimport io.klogging.Klogging\n\nclass ImportantService : Klogging {\n\n    fun beImportant() {\n        // This logger has the name "com.example.ImportantService".\n        logger.info("Being important")\n    }\n}\n')),(0,i.kt)("p",null,"Similarly, for non-coroutine classes, the ",(0,i.kt)("inlineCode",{parentName:"p"},"NoCoLogging")," interface has a ",(0,i.kt)("inlineCode",{parentName:"p"},"logger")," property\nthat returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"NoCoLogger")," instance."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"logger")," property is not static and its ",(0,i.kt)("inlineCode",{parentName:"p"},"get()")," function is called every time it is\nreferenced. You can define a logger directly if performance is important."))),(0,i.kt)("h2",{id:"define-a-logger-directly"},"Define a logger directly"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"logger()")," function defines a logger directly by name or by owning class. The following\ntwo calls to ",(0,i.kt)("inlineCode",{parentName:"p"},"logger")," are equivalent:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'package com.example\n\nimport io.klogging.logger\n\nclass BusyService {\n    val loggerByClass = logger(BusyService::class)\n    val loggerByName = logger("com.example.BusyService")\n}\n')),(0,i.kt)("p",null,"In fact, both ",(0,i.kt)("inlineCode",{parentName:"p"},"loggerByClass")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"loggerByName")," refer to the same logger instance."),(0,i.kt)("h2",{id:"static-reference"},"Static reference"),(0,i.kt)("p",null,"For a single reference to a logger that is not looked up every time, define it in the\ncompanion object of a class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"class VeryBusyService {\n    companion object {\n        logger = logger(VeryBusyService::class)\n    }\n}\n")))}m.isMDXComponent=!0}}]);