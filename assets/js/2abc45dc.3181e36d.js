"use strict";(self.webpackChunkklogging_io=self.webpackChunkklogging_io||[]).push([[5567],{396:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var l=i(4848),s=i(8453);const o={sidebar_position:20},t="Configuration with JSON",c={id:"configuration/json",title:"Configuration with JSON",description:"Klogging can be configured from JSON files. This example is exactly equivalent to",source:"@site/docs/configuration/json.md",sourceDirName:"configuration",slug:"/configuration/json",permalink:"/docs/configuration/json",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Configuration DSL",permalink:"/docs/configuration/dsl"},next:{title:"Configuration with HOCON",permalink:"/docs/configuration/hocon"}},r={},d=[{value:"Locating configuration files",id:"locating-configuration-files",level:2},{value:"Configuration object names",id:"configuration-object-names",level:2},{value:"<code>sinks</code>",id:"sinks",level:3},{value:"<code>logging</code>",id:"logging",level:3},{value:"<code>levelRanges</code>",id:"levelranges",level:3},{value:"Other options",id:"other-options",level:3},{value:"<code>kloggingMinLogLevel</code>",id:"kloggingminloglevel",level:4},{value:"<code>minDirectLogLevel</code>",id:"mindirectloglevel",level:4},{value:"<code>baseContext</code>",id:"basecontext",level:4}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"configuration-with-json",children:"Configuration with JSON"}),"\n",(0,l.jsxs)(n.p,{children:["Klogging can be configured from JSON files. This example is exactly equivalent to\nthe ",(0,l.jsx)(n.a,{href:"dsl#a-simple-example",children:"first DSL example"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "sinks": {\n    "stdout": {\n      "renderWith": "RENDER_SIMPLE",\n      "sendTo": "STDOUT"\n    },\n    "seq": {\n      "seqServer": "http://localhost:5341"\n    }\n  },\n  "logging": [\n    {\n      "fromLoggerBase": "com.example",\n      "levelRanges": [\n        {\n          "fromMinLevel": "INFO",\n          "toSinks": [\n            "stdout"\n          ]\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"locating-configuration-files",children:"Locating configuration files"}),"\n",(0,l.jsx)(n.p,{children:"Klogging looks for configuration files as follows:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["If the environment variable ",(0,l.jsx)(n.code,{children:"KLOGGING_CONFIG_PATH"})," exists, load the file at that absolute path if\nit exists."]}),"\n",(0,l.jsxs)(n.li,{children:["Search the classpath for the file ",(0,l.jsx)(n.code,{children:"klogging.json"})," first, and ",(0,l.jsx)(n.code,{children:"klogging.conf"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"If a configuration file is found it is read as JSON or HOCON."}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsxs)(n.p,{children:["JSON file names must end with ",(0,l.jsx)(n.code,{children:".json"})," and HOCON files must end with ",(0,l.jsx)(n.code,{children:".conf"}),"."]})}),"\n",(0,l.jsx)(n.h2,{id:"configuration-object-names",children:"Configuration object names"}),"\n",(0,l.jsx)(n.h3,{id:"sinks",children:(0,l.jsx)(n.code,{children:"sinks"})}),"\n",(0,l.jsxs)(n.p,{children:["Equivalent to the ",(0,l.jsx)(n.a,{href:"dsl#sink",children:"sinks"})," DSL function. Object keyed by sink name with keys:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"renderWith"}),": name of a ",(0,l.jsx)(n.a,{href:"built-ins#rendering",children:"built-in renderer"}),". Current values\nare ",(0,l.jsx)(n.code,{children:"RENDER_SIMPLE"}),", ",(0,l.jsx)(n.code,{children:"RENDER_ISO8601"}),", ",(0,l.jsx)(n.code,{children:"RENDER_ANSI"}),", ",(0,l.jsx)(n.code,{children:"RENDER_CLEF"})," and ",(0,l.jsx)(n.code,{children:"RENDER_GELF"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"sendTo"}),": name of a ",(0,l.jsx)(n.a,{href:"built-ins#sending",children:"built-in sender"}),". Current values are ",(0,l.jsx)(n.code,{children:"STDOUT"})," and\n",(0,l.jsx)(n.code,{children:"STDERR"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"seqServer"}),": URL of a ",(0,l.jsx)(n.a,{href:"https://datalust.co",children:"Seq server"})," where events are to be dispatched. By\ndefault, the RENDER_CLEF renderer is used."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"apiKey"}),": a Seq API key. It is a secret that should be passed in via an environment variable, for\nexample: ",(0,l.jsx)(n.code,{children:'"apiKey": "${SEQ_API_KEY}"'})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"checkCertificate"}),": a boolean value (default ",(0,l.jsx)(n.code,{children:"true"}),") that specifies if the TLS certificate used by\na secure ",(0,l.jsx)(n.code,{children:"seqServer"})," URL should be checked."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"splunkServer"}),": connection details for a ",(0,l.jsx)(n.a,{href:"https://www.splunk.com",children:"Splunk HEC endpoint"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"hecUrl"})," specifies the URL of the Splunk server\u2019s HEC endpoint. It uses HTTPS by default."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"hecToken"})," is the HEC token used by Splunk for these logging events. It is a secret\nthat should be passed in via the execution environment."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"index"})," is the Splunk index for the events (optional). If set, it must be a value configured\nin Splunk. If not set, Splunk will use the default index configured for the HEC token."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"sourceType"})," is the Splunk ",(0,l.jsx)(n.code,{children:"sourcetype"})," value (optional). If not set, Splunk will use\n",(0,l.jsx)(n.code,{children:"httpevent"})," or a value configured for the HEC token."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"source"})," is the Splunk ",(0,l.jsx)(n.code,{children:"source"})," value, typically the name of an application (optional).\nIf not set, Splunk will use a name configured with the HEC token."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"checkCertificate"})," indicates whether Klogging should check the TLS certificate used by the\nSplunk server (string: default ",(0,l.jsx)(n.code,{children:'"true"'}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["An example of a Splunk sink called ",(0,l.jsx)(n.code,{children:"splunk"})," is:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "splunk": {\n    "splunkServer": {\n      "hecUrl": "https://localhost:8088",\n      "hecToken": "${SPLUNK_HEC_TOKEN}",\n      "source": "MyApplication",\n      "checkCertificate": "false"\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsxs)(n.p,{children:["You should have only one of ",(0,l.jsx)(n.code,{children:"splunkServer"}),", ",(0,l.jsx)(n.code,{children:"seqServer"})," or ",(0,l.jsx)(n.code,{children:"sendTo"})," in a sink. If\nyou have more than one, ",(0,l.jsx)(n.code,{children:"splunkServer"})," takes precedence over ",(0,l.jsx)(n.code,{children:"seqServer"}),", which takes\nprecedence over ",(0,l.jsx)(n.code,{children:"sendTo"}),"."]})}),"\n",(0,l.jsxs)(n.p,{children:["You can create a\n",(0,l.jsx)(n.a,{href:"../concepts/rendering-and-sending#custom-rendering-and-sending",children:"custom renderer or sender"}),"\nand include its fully-qualified class name in a sink definition."]}),"\n",(0,l.jsx)(n.h3,{id:"logging",children:(0,l.jsx)(n.code,{children:"logging"})}),"\n",(0,l.jsxs)(n.p,{children:["Equivalent to the ",(0,l.jsx)(n.a,{href:"dsl#logging",children:"logging"})," DSL function. Array of objects, each with optional keys:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"fromLoggerBase"}),": base name to match logger names."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"exactLogger"}),": exact name of logger to match."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"matchLogger"}),": a ",(0,l.jsx)(n.a,{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/-regex/",children:"Kotlin regular expression"}),"\npattern used to match logger names."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsxs)(n.p,{children:["You should specify only one of these in a ",(0,l.jsx)(n.code,{children:"logging"})," object. If more are specified,\n",(0,l.jsx)(n.code,{children:"matchLogger"})," takes precedence over ",(0,l.jsx)(n.code,{children:"exactLogger"}),", which takes precedence over\n",(0,l.jsx)(n.code,{children:"fromLoggerBase"}),"."]})}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsx)(n.p,{children:"If you specify no key, all loggers will match. This configuration is the equivalent of the root\nlogger in Log4j or Logback."})}),"\n",(0,l.jsx)(n.h3,{id:"levelranges",children:(0,l.jsx)(n.code,{children:"levelRanges"})}),"\n",(0,l.jsx)(n.p,{children:"Array of objects, each with keys:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"fromMinLevel"}),": Name of the minimum level for log events to be emitted. For example, if the value\nis ",(0,l.jsx)(n.code,{children:"INFO"})," then events at severity ",(0,l.jsx)(n.code,{children:"INFO"}),", ",(0,l.jsx)(n.code,{children:"ERROR"})," and ",(0,l.jsx)(n.code,{children:"FATAL"})," will be emitted. Equivalent to\nthe ",(0,l.jsx)(n.a,{href:"dsl#fromminlevel-tomaxlevel-atlevel-and-inlevelrange",children:"fromMinLevel"})," DSL function."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"toMaxLevel"}),": Name of the maximum level for log events to be emitted. For example, if the value\nis ",(0,l.jsx)(n.code,{children:"INFO"})," then events at severity ",(0,l.jsx)(n.code,{children:"TRACE"}),", ",(0,l.jsx)(n.code,{children:"DEBUG"})," and ",(0,l.jsx)(n.code,{children:"INFO"})," will be emitted. Equivalent to\nthe ",(0,l.jsx)(n.a,{href:"dsl#fromminlevel-tomaxlevel-atlevel-and-inlevelrange",children:"toMaxLevel"})," DSL function."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["You can combine ",(0,l.jsx)(n.code,{children:"fromMinLevel"})," and ",(0,l.jsx)(n.code,{children:"toMaxLevel"})," values to set an inclusive range of levels.\nEquivalent to the ",(0,l.jsx)(n.a,{href:"dsl#fromminlevel-tomaxlevel-atlevel-and-inlevelrange",children:"inLevelRange"})," DSL function."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"atLevel"}),": Name of the exact level at which log events will be emitted. Equivalent to\nthe ",(0,l.jsx)(n.a,{href:"dsl#fromminlevel-tomaxlevel-atlevel-and-inlevelrange",children:"atLevel"})," DSL function."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"toSinks"}),": Array of sink names where events will be sent. If it does not match a key of\nthe ",(0,l.jsx)(n.code,{children:"sinks"})," object, a  warning is written to the console and the configuration is ignored."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsxs)(n.p,{children:["You must specify at least one ",(0,l.jsx)(n.code,{children:"levelRange"})," object with at least one matching sink name or no logs\nwill be emitted."]})}),"\n",(0,l.jsx)(n.h3,{id:"other-options",children:"Other options"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "kloggingMinLogLevel": "DEBUG",\n  "minDirectLogLevel": "INFO",\n  "baseContext": {\n    "appName": "analysis-service",\n    "buildNumber": "${BUILD_NUMBER}"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"kloggingminloglevel",children:(0,l.jsx)(n.code,{children:"kloggingMinLogLevel"})}),"\n",(0,l.jsxs)(n.p,{children:["Set the minimum level of the ",(0,l.jsx)(n.a,{href:"../internals/internal-logger",children:"Klogging internal logger"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"mindirectloglevel",children:(0,l.jsx)(n.code,{children:"minDirectLogLevel"})}),"\n",(0,l.jsxs)(n.p,{children:["Set the minimum level for ",(0,l.jsx)(n.a,{href:"../concepts/direct-logging",children:"sending log events directly to sinks"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"basecontext",children:(0,l.jsx)(n.code,{children:"baseContext"})}),"\n",(0,l.jsxs)(n.p,{children:["Specify ",(0,l.jsx)(n.a,{href:"../context/base-context",children:"context items to add to every log event"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var l=i(6540);const s={},o=l.createContext(s);function t(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);