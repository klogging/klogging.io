"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[568],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),g=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=g(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=g(t),d=r,m=c["".concat(s,".").concat(d)]||c[d]||u[d]||i;return t?a.createElement(m,l(l({ref:n},p),{},{components:t})):a.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var g=2;g<i;g++)l[g]=t[g];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3811:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return g},toc:function(){return c}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),l=["components"],o={sidebar_position:20},s="Using SLF4J",g={unversionedId:"java/slf4j",id:"java/slf4j",title:"Using SLF4J",description:"The Simple Logging Fa\xe7ade for Java (SLF4J) library is a widely-used",source:"@site/docs/java/slf4j.md",sourceDirName:"java",slug:"/java/slf4j",permalink:"/docs/java/slf4j",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Using Klogging directly",permalink:"/docs/java/klogging-from-java"},next:{title:"Klogging with Spring Boot",permalink:"/docs/java/spring-boot"}},p={},c=[{value:"Setting up",id:"setting-up",level:2},{value:"Including values in messages",id:"including-values-in-messages",level:2},{value:"SLF4J formatting with placeholders",id:"slf4j-formatting-with-placeholders",level:3},{value:"Message templates",id:"message-templates",level:3},{value:"MDC",id:"mdc",level:3}],u={toc:c},d="wrapper";function m(e){var n=e.components,o=(0,r.Z)(e,l);return(0,i.kt)(d,(0,a.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"using-slf4j"},"Using SLF4J"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"http://www.slf4j.org/"},"Simple Logging Fa\xe7ade for Java (SLF4J)")," library is a widely-used\nlibrary for Java logging. It has two parts: a standard API that Java programs call; and a binding\nthat maps API calls to a logging framework (e.g. Logback, Log4j)."),(0,i.kt)("p",null,"Many Java programs and frameworks, including ",(0,i.kt)("a",{parentName:"p",href:"https://spring.io/"},"Spring"),", log using the\nSLF4J API."),(0,i.kt)("p",null,"Klogging has an ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/klogging/slf4j-klogging"},"SLF4J binding"),"\nthat allows existing programs using SLF4J to switch the framework to Klogging."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://search.maven.org/search?q=g:%22io.klogging%22%20AND%20a:%22slf4j-klogging%22"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.klogging/slf4j-klogging.svg?label=maven%20central",alt:"Maven Central"}))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Versions 0.3.0 and later supports SLF4J versions 1.x and 2.x as used by Spring Boot versions\n2.x and 3.x, respectively.")),(0,i.kt)("h2",{id:"setting-up"},"Setting up"),(0,i.kt)("p",null,"Include this dependency in your Gradle build file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'    implementation("io.klogging:slf4j-klogging:0.3.4")\n')),(0,i.kt)("p",null,"In Maven:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<dependencies>\n  <dependency>\n    <groupId>io.klogging</groupId>\n    <artifactId>slf4j-klogging</artifactId>\n    <version>0.3.4</version>\n  </dependency>\n</dependencies>\n")),(0,i.kt)("h2",{id:"including-values-in-messages"},"Including values in messages"),(0,i.kt)("p",null,"There are two options for including values in messages: SLF4J formatting with placeholders or\nKlogging message templates."),(0,i.kt)("h3",{id:"slf4j-formatting-with-placeholders"},"SLF4J formatting with placeholders"),(0,i.kt)("p",null,"All existing logging statements with SLF4J formatting will continue to work with Klogging,\nfor example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    logger.info("Captured value {}", captured);\n')),(0,i.kt)("p",null,"In this example, the log event contains the message with ",(0,i.kt)("inlineCode",{parentName:"p"},"{}")," replaced by the value of\n",(0,i.kt)("inlineCode",{parentName:"p"},"captured")," and contains no items."),(0,i.kt)("h3",{id:"message-templates"},"Message templates"),(0,i.kt)("p",null,"With the Klogging binding, you can use ",(0,i.kt)("a",{parentName:"p",href:"../concepts/message-templates"},"message templates"),"\nin SLF4J logging method calls and Klogging will emit structured log events. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    logger.info("User {userId} logged in", userId);\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"IntelliJ IDEA will highlight message templates in SLF4J logging method calls because\nthey are not the positional ",(0,i.kt)("inlineCode",{parentName:"p"},"{}")," placeholders used by SLF4J."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("img",{alt:"IntelliJ highlight message for message template",src:t(4857).Z,width:"1114",height:"164"}))),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Klogging does not currently support messages containing both SLF4J placeholders and message\ntemplate holes.")),(0,i.kt)("h3",{id:"mdc"},"MDC"),(0,i.kt)("p",null,"Klogging will include any information from the Mapped Diagnostic Context (MDC)\nin its log events. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    try (MDC.MDCCloseable closeable = MDC.putCloseable("runId", UUID.randomUUID().toString())) {\n        logger.info("Started processing");\n        processStuff();\n        logger.info("Finished processing");\n    }\n')),(0,i.kt)("p",null,"All structured log events emitted in that block include the key ",(0,i.kt)("inlineCode",{parentName:"p"},"runId"),"\nwith the value for that run."))}m.isMDXComponent=!0},4857:function(e,n,t){n.Z=t.p+"assets/images/slf4j-intellij-message-4ba1a7835e30770a8b08dd1e22d2b754.png"}}]);