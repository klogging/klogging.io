"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[570],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>f});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||g[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(8168),o=(n(6540),n(5680));const a={sidebar_position:50},i="From other sources",c={unversionedId:"context/other-context",id:"context/other-context",title:"From other sources",description:"Klogging can include context items from other sources without coroutine context information.",source:"@site/docs/context/other-context.md",sourceDirName:"context",slug:"/context/other-context",permalink:"/docs/context/other-context",draft:!1,tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"From other coroutine contexts",permalink:"/docs/context/other-coroutine-context"},next:{title:"Defining loggers",permalink:"/docs/loggers/defining-loggers"}},l={},s=[],p={toc:s},u="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"from-other-sources"},"From other sources"),(0,o.yg)("p",null,"Klogging can include context items from other sources without coroutine context information."),(0,o.yg)("p",null,"Klogging has a functional type alias ",(0,o.yg)("inlineCode",{parentName:"p"},"ItemExtractor"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-kotlin"},"public typealias ItemExtractor = () -> EventItems\n")),(0,o.yg)("p",null,"You can register an ",(0,o.yg)("inlineCode",{parentName:"p"},"ItemExtractor")," to be called as each log event is assembled before it is\nemitted using ",(0,o.yg)("inlineCode",{parentName:"p"},"Context.addItemExtractor")," function."),(0,o.yg)("p",null,"Klogging\u2019s ",(0,o.yg)("a",{parentName:"p",href:"../java/slf4j"},"SLF4J provider")," uses an ",(0,o.yg)("inlineCode",{parentName:"p"},"ItemExtractor")," to include any MDC entries into\nlog event context items:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-kotlin"},"    Context.addItemExtractor {\n        MDC.getCopyOfContextMap() ?: mapOf()\n    }\n")),(0,o.yg)("p",null,"Current MDC entries are included in all log events, whether sent from SLF4J loggers or direct from\nKlogger or NoCoLogger instances."))}g.isMDXComponent=!0}}]);