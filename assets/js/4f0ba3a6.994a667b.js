"use strict";(self.webpackChunkklogging_io=self.webpackChunkklogging_io||[]).push([[570],{2849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"context/other-context","title":"From other sources","description":"Klogging can include context items from other sources without coroutine context information.","source":"@site/docs/context/other-context.md","sourceDirName":"context","slug":"/context/other-context","permalink":"/docs/context/other-context","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40},"sidebar":"tutorialSidebar","previous":{"title":"From other coroutine contexts","permalink":"/docs/context/other-coroutine-context"},"next":{"title":"Message templates","permalink":"/docs/context/message-templates"}}');var r=n(4848),s=n(8453);const c={sidebar_position:40},i="From other sources",a={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"from-other-sources",children:"From other sources"})}),"\n",(0,r.jsx)(t.p,{children:"Klogging can include context items from other sources without coroutine context information."}),"\n",(0,r.jsxs)(t.p,{children:["Klogging has a functional type alias ",(0,r.jsx)(t.code,{children:"ItemExtractor"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-kotlin",children:"public typealias ItemExtractor = () -> EventItems\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You can register an ",(0,r.jsx)(t.code,{children:"ItemExtractor"})," to be called as each log event is assembled before it is\nemitted using ",(0,r.jsx)(t.code,{children:"Context.addItemExtractor"})," function."]}),"\n",(0,r.jsxs)(t.p,{children:["Klogging\u2019s ",(0,r.jsx)(t.a,{href:"/docs/java/slf4j",children:"SLF4J provider"})," uses an ",(0,r.jsx)(t.code,{children:"ItemExtractor"})," to include any MDC entries into\nlog event context items:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-kotlin",children:"    Context.addItemExtractor {\n        MDC.getCopyOfContextMap() ?: mapOf()\n    }\n"})}),"\n",(0,r.jsx)(t.p,{children:"Current MDC entries are included in all log events, whether sent from SLF4J loggers or direct from\nKlogger or NoCoLogger instances."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var o=n(6540);const r={},s=o.createContext(r);function c(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);