"use strict";(self.webpackChunkklogging_io=self.webpackChunkklogging_io||[]).push([[5690],{81:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var i=t(4848),s=t(8453);const r={sidebar_position:10},c="Environment variables",d={id:"internals/environment-variables",title:"Environment variables",description:"Klogging\u2019s behaviour can be modified by setting certain environment variables",source:"@site/docs/internals/environment-variables.md",sourceDirName:"internals",slug:"/internals/environment-variables",permalink:"/docs/internals/environment-variables",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Direct logging",permalink:"/docs/concepts/direct-logging"},next:{title:"Log levels and checking",permalink:"/docs/internals/level-checking"}},l={},o=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"environment-variables",children:"Environment variables"}),"\n",(0,i.jsx)(n.p,{children:"Klogging\u2019s behaviour can be modified by setting certain environment variables\nin the runtime."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"KLOGGING_MIN_LOG_LEVEL"})}),(0,i.jsxs)(n.td,{children:["Minimum level at which Klogging\u2019s ",(0,i.jsx)(n.a,{href:"/docs/internals/internal-logger",children:"internal logger"})," emits log messages. Acceptable values are ",(0,i.jsx)(n.code,{children:"TRACE"}),", ",(0,i.jsx)(n.code,{children:"DEBUG"}),", ",(0,i.jsx)(n.code,{children:"INFO"}),", ",(0,i.jsx)(n.code,{children:"WARN"}),", ",(0,i.jsx)(n.code,{children:"ERROR"})," and ",(0,i.jsx)(n.code,{children:"FATAL"}),"."]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"INFO"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"KLOGGING_MIN_DIRECT_LOG_LEVEL"})}),(0,i.jsxs)(n.td,{children:["Minimum level at which log events are ",(0,i.jsx)(n.a,{href:"/docs/concepts/direct-logging",children:"sent directly to sinks"})," instead of via coroutine channels. Acceptable values are ",(0,i.jsx)(n.code,{children:"TRACE"}),", ",(0,i.jsx)(n.code,{children:"DEBUG"}),", ",(0,i.jsx)(n.code,{children:"INFO"}),", ",(0,i.jsx)(n.code,{children:"WARN"}),", ",(0,i.jsx)(n.code,{children:"ERROR"})," and ",(0,i.jsx)(n.code,{children:"FATAL"}),"."]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"WARN"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"KLOGGING_CONFIG_PATH"})}),(0,i.jsxs)(n.td,{children:["Absolute path to a ",(0,i.jsx)(n.a,{href:"/docs/configuration/json",children:"JSON"})," or ",(0,i.jsx)(n.a,{href:"/docs/configuration/hocon",children:"HOCON"})," configuration file."]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"(none)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"KLOGGING_CONFIG_JSON_PATH"})," \u26a0\ufe0f"]}),(0,i.jsxs)(n.td,{children:["Absolute path to a ",(0,i.jsx)(n.a,{href:"/docs/configuration/json",children:"JSON configuration file"}),"."]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"(none)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"KLOGGING_OUTPUT_FORMAT_"}),(0,i.jsx)(n.em,{children:"sink-name"})," \ufe0f"]}),(0,i.jsxs)(n.td,{children:["Override the output format for a sink. For example, setting ",(0,i.jsx)(n.code,{children:"KLOGGING_OUTPUT_FORMAT_STDOUT=CLEF"})," will change the output format for the ",(0,i.jsx)(n.code,{children:"stdout"})," sink to ",(0,i.jsx)(n.code,{children:"CLEF"}),"."]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"(none)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENV_KLOGGING_EVENT_CHANNEL_CAPACITY"})}),(0,i.jsx)(n.td,{children:"Buffer capacity of the coroutine channel used for events."}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"100"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENV_KLOGGING_SINK_CHANNEL_CAPACITY"})}),(0,i.jsx)(n.td,{children:"Buffer capacity of the coroutine channel used for each sink."}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"100"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENV_KLOGGING_BATCH_MAX_TIME_MS"})}),(0,i.jsx)(n.td,{children:"Maximum time in milliseconds between sending batches of events to sinks."}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"10"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENV_KLOGGING_BATCH_MAX_SIZE"})}),(0,i.jsx)(n.td,{children:"Maximum batch size of events that are sent to sinks."}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"100"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENV_KLOGGING_FF_EXECUTOR_THREAD_POOL"})}),(0,i.jsxs)(n.td,{children:["(JVM) Feature flag: if present and ",(0,i.jsx)(n.code,{children:"true"})," then Klogging uses a coroutine dispatcher with a separate, fixed-size thread pool. ",(0,i.jsx)(n.strong,{children:"This is an experimental feature."})]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"10"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENV_KLOGGING_COROUTINE_THREADS"})}),(0,i.jsxs)(n.td,{children:["(JVM) Number of threads to use in the pool for Klogging coroutines if ",(0,i.jsx)(n.code,{children:"ENV_KLOGGING_FF_EXECUTOR_THREAD_POOL"})," evaluates ",(0,i.jsx)(n.code,{children:"true"}),"."]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"(none)"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"KLOGGING_CONFIG_JSON_PATH"})," is deprecated and will be replaced by ",(0,i.jsx)(n.code,{children:"KLOGGING_CONFIG_PATH"})," for both\nJSON and HOCON configuration files."]})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var i=t(6540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);