"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[5422],{7443:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var t=r(4848),i=r(5680);const l={sidebar_position:30},s="Internal logger",o={id:"internals/internal-logger",title:"Internal logger",description:"Klogging has an internal logger that emits string messages to the console. Its purpose is for",source:"@site/docs/internals/internal-logger.md",sourceDirName:"internals",slug:"/internals/internal-logger",permalink:"/docs/internals/internal-logger",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Log levels and checking",permalink:"/docs/internals/level-checking"}},a={},g=[{value:"Usage",id:"usage",level:2},{value:"Minimum logging level",id:"minimum-logging-level",level:2},{value:"Logging output",id:"logging-output",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.RP)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"internal-logger",children:"Internal logger"}),"\n",(0,t.jsx)(n.p,{children:"Klogging has an internal logger that emits string messages to the console. Its purpose is for\ndiagnostics on Klogging itself."}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"Klogging uses its internal logger in these ways:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Level"}),(0,t.jsx)(n.th,{children:"Typical use"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"TRACE"}),(0,t.jsx)(n.td,{children:"Detailed tracing of log events through Klogging"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DEBUG"}),(0,t.jsx)(n.td,{children:"Lifecycle events of Klogging components"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"INFO"}),(0,t.jsx)(n.td,{children:"Klogging has read configuration from DSL or file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"WARN"}),(0,t.jsx)(n.td,{children:"There was an error interpreting some configuration"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"minimum-logging-level",children:"Minimum logging level"}),"\n",(0,t.jsxs)(n.p,{children:["The internal logger has a minimum level from which it will emit log messages, set by\nthe \u2018global\u2019 variable ",(0,t.jsx)(n.code,{children:"kloggingMinLogLevel"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The level is ",(0,t.jsx)(n.code,{children:"INFO"})," by default."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["It can be changed by the ",(0,t.jsx)(n.a,{href:"../internals/environment-variables",children:"environment variable"}),"\n",(0,t.jsx)(n.code,{children:"KLOGGING_MIN_LOG_LEVEL"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"logging-output",children:"Logging output"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/klogging/klogging/blob/main/klogging/src/commonMain/kotlin/io/klogging/internal/InternalLogging.kt",children:"The code"}),"\nconstructs log events, renders them as string messages using a specific renderer and sends\nthem to the console."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the logging level is ",(0,t.jsx)(n.code,{children:"INFO"})," or lower, they are sent to the standard output stream."]}),"\n",(0,t.jsxs)(n.li,{children:["If the logging level is ",(0,t.jsx)(n.code,{children:"WARN"})," or higher, they are sent to the standard error stream.\nSome shells will show these messages in a different colour (e.g. red)."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.RP)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},5680:(e,n,r)=>{r.d(n,{RP:()=>g});var t=r(6540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=t.createContext({}),g=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),h=g(r),u=i,p=h["".concat(a,".").concat(u)]||h[u]||c[u]||l;return r?t.createElement(p,s(s({ref:n},d),{},{components:r})):t.createElement(p,s({ref:n},d))}));d.displayName="MDXCreateElement"}}]);