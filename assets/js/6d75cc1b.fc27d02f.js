"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[660],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),g=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=g(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=g(t),m=i,d=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return t?r.createElement(d,l(l({ref:n},p),{},{components:t})):r.createElement(d,l({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var g=2;g<a;g++)l[g]=t[g];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},722:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return g},toc:function(){return u}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={sidebar_position:30},s="Internal logger",g={unversionedId:"internals/internal-logger",id:"internals/internal-logger",title:"Internal logger",description:"Klogging has an internal logger that emits string messages to the console.",source:"@site/docs/internals/internal-logger.md",sourceDirName:"internals",slug:"/internals/internal-logger",permalink:"/docs/internals/internal-logger",draft:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Log levels and checking",permalink:"/docs/internals/level-checking"}},p={},u=[{value:"Usage",id:"usage",level:2},{value:"Minimum logging level",id:"minimum-logging-level",level:2},{value:"Under the hood",id:"under-the-hood",level:2}],c={toc:u},m="wrapper";function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,a.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"internal-logger"},"Internal logger"),(0,a.kt)("p",null,"Klogging has an internal logger that emits string messages to the console."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"The core function ",(0,a.kt)("inlineCode",{parentName:"p"},"log(String, Level, String, Exception?)")," is called by utility functions for five levels:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'trace("Sink", "Forwarding event ${event.id} to sink $name")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'debug("Emitter", "Starting events channel")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'info("Configuration", "Setting configuration using the DSL with append=$append")'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'warn("JsonConfiguration", "Exception parsing JSON", ex)'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'error("Sink", "A serious error has occurred", ex)')))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"../concepts/message-templates"},"Message templates")," are not currently supported by the internal\nlogger.")),(0,a.kt)("h2",{id:"minimum-logging-level"},"Minimum logging level"),(0,a.kt)("p",null,"The internal logger has a minimum level from which it will emit log messages, set by\nthe \u2018global\u2019 variable ",(0,a.kt)("inlineCode",{parentName:"p"},"kloggingMinLogLevel"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The level is ",(0,a.kt)("inlineCode",{parentName:"p"},"INFO")," by default.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"It can be changed by the ",(0,a.kt)("a",{parentName:"p",href:"../internals/environment-variables"},"environment variable"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"KLOGGING_MIN_LOG_LEVEL")))),(0,a.kt)("h2",{id:"under-the-hood"},"Under the hood"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/klogging/klogging/blob/main/klogging/src/commonMain/kotlin/io/klogging/internal/InternalLogging.kt"},"The code"),"\nconstructs log events, renders them as string messages using a specific renderer and sends\nthem to the console."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If the logging level is ",(0,a.kt)("inlineCode",{parentName:"li"},"INFO")," or lower, they are sent to the standard output stream."),(0,a.kt)("li",{parentName:"ul"},"If the logging level is ",(0,a.kt)("inlineCode",{parentName:"li"},"WARN")," or higher, they are sent to the standard error stream.\nSome shells will show these messages in a different colour (e.g. red).")))}d.isMDXComponent=!0}}]);