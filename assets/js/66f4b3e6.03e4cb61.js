"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[5749],{4736:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=t(4848),o=t(5680);const r={sidebar_position:30},s="Asynchronous handling of log events",c={id:"coroutines/async",title:"Asynchronous handling of log events",description:"Coroutines provide a simple way to asynchronously handle log events, including dispatching them to different",source:"@site/docs/coroutines/async.md",sourceDirName:"coroutines",slug:"/coroutines/async",permalink:"/docs/coroutines/async",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Contextual event items",permalink:"/docs/coroutines/context"},next:{title:"Java, Spring, SLF4J and Hexagon",permalink:"/docs/java/"}},a={},l=[];function g(n){const e={a:"a",h1:"h1",img:"img",li:"li",p:"p",ul:"ul",...(0,o.RP)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"asynchronous-handling-of-log-events",children:"Asynchronous handling of log events"}),"\n",(0,i.jsx)(e.p,{children:"Coroutines provide a simple way to asynchronously handle log events, including dispatching them to different\nsinks."}),"\n",(0,i.jsx)(e.p,{children:"Klogging launches new coroutines that are used in a number of places:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"For dispatching log events to sinks."}),"\n",(0,i.jsx)(e.li,{children:"For receiving log events from event and sink channels."}),"\n",(0,i.jsx)(e.li,{children:"For sending batches of log events to network destinations."}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"Klogging process diagram",src:t(7500).A+""})}),"\n",(0,i.jsx)(e.p,{children:"In addition, Klogging uses coroutine channels to process events."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["Log events are ",(0,i.jsx)(e.a,{href:"https://github.com/klogging/klogging/blob/main/klogging/src/commonMain/kotlin/io/klogging/internal/Emitter.kt#L67",children:"sent into the events\nchannel"}),"\nin a coroutine."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["They are read in a different coroutine and dispatched to each matching sink by ",(0,i.jsx)(e.a,{href:"https://github.com/klogging/klogging/blob/main/klogging/src/commonMain/kotlin/io/klogging/internal/Sink.kt#L72",children:"sending it into\neach sink"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["Events are ",(0,i.jsx)(e.a,{href:"https://github.com/klogging/klogging/blob/main/klogging/src/commonMain/kotlin/io/klogging/sending/Batching.kt#L47",children:"read from sink channels in\nbatches"}),"\nin different coroutines."]}),"\n"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,o.RP)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(g,{...n})}):g(n)}},5680:(n,e,t)=>{t.d(e,{RP:()=>l});var i=t(6540);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,i,o=function(n,e){if(null==n)return{};var t,i,o={},r=Object.keys(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var a=i.createContext({}),l=function(n){var e=i.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},g={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(n,e){var t=n.components,o=n.mdxType,r=n.originalType,a=n.parentName,d=c(n,["components","mdxType","originalType","parentName"]),u=l(t),h=o,p=u["".concat(a,".").concat(h)]||u[h]||g[h]||r;return t?i.createElement(p,s(s({ref:e},d),{},{components:t})):i.createElement(p,s({ref:e},d))}));d.displayName="MDXCreateElement"},7500:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/klogging-process-0192d5e31b1784bd7f750ed46349c9bd.svg"}}]);