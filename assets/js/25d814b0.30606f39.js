"use strict";(self.webpackChunkklogging_io=self.webpackChunkklogging_io||[]).push([[2985],{8610:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var o=i(4848),s=i(8453);const t={sidebar_position:80},r="Direct logging",c={id:"concepts/direct-logging",title:"Direct logging",description:"Klogging handles most log events asynchronously by using Kotlin coroutines. This design takes",source:"@site/docs/concepts/direct-logging.md",sourceDirName:"concepts",slug:"/concepts/direct-logging",permalink:"/docs/concepts/direct-logging",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:80,frontMatter:{sidebar_position:80},sidebar:"tutorialSidebar",previous:{title:"Rendering and sending",permalink:"/docs/concepts/rendering-and-sending"},next:{title:"Environment variables",permalink:"/docs/internals/environment-variables"}},a={},l=[];function g(n){const e={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"direct-logging",children:"Direct logging"}),"\n",(0,o.jsx)(e.p,{children:"Klogging handles most log events asynchronously by using Kotlin coroutines. This design takes\nlogging away from the main threads of program execution as soon as possible."}),"\n",(0,o.jsx)(e.p,{children:"But asynchronous processing delays the sending of log events to sinks, so they may be lost when the\nprogram finishes. This can be a problem if the log events occur immediately before a program\ncrashes. Those events may contain valuable information about why the crash happened."}),"\n",(0,o.jsxs)(e.p,{children:["By default, Klogging sends all events with level ",(0,o.jsx)(e.code,{children:"WARN"})," and above (",(0,o.jsx)(e.code,{children:"ERROR"})," and ",(0,o.jsx)(e.code,{children:"FATAL"}),") directly to\nsinks. The minimum level can be configured using the ",(0,o.jsx)(e.a,{href:"../configuration/dsl",children:"configuration DSL"})," or\nin ",(0,o.jsx)(e.a,{href:"../configuration/json",children:"JSON files"}),"."]}),"\n",(0,o.jsx)(e.p,{children:"In the DSL:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-kotlin",children:"loggingConfiguration {\n    minDirectLogLevel(INFO)\n    // Other configuration\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:"In JSON:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n  "minDirectLogLevel": "INFO"\n}\n'})}),"\n",(0,o.jsxs)(e.p,{children:["The level can also be set using the ",(0,o.jsx)(e.a,{href:"../internals/environment-variables",children:"environment\nvariable"})," ",(0,o.jsx)(e.code,{children:"KLOGGING_MIN_DIRECT_LOG_LEVEL"}),"."]})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(g,{...n})}):g(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var o=i(6540);const s={},t=o.createContext(s);function r(n){const e=o.useContext(t);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);