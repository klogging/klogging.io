"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[8099],{9879:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var o=r(4848),t=r(5680);const i={sidebar_position:30},s="Klogging with Spring Boot",l={id:"java/spring-boot",title:"Klogging with Spring Boot",description:"Klogging works really well with Spring Boot, especially in Kotlin code.",source:"@site/docs/java/spring-boot.md",sourceDirName:"java",slug:"/java/spring-boot",permalink:"/docs/java/spring-boot",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Using SLF4J",permalink:"/docs/java/slf4j"},next:{title:"Hexagon microservices toolkit",permalink:"/docs/java/hexagon"}},a={},g=[{value:"Using Klogging in Spring Boot",id:"using-klogging-in-spring-boot",level:2},{value:"In Kotlin code",id:"in-kotlin-code",level:3},{value:"Gradle setup",id:"gradle-setup",level:2},{value:"Maven setup",id:"maven-setup",level:2},{value:"Configure Klogging",id:"configure-klogging",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,t.RP)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"klogging-with-spring-boot",children:"Klogging with Spring Boot"}),"\n",(0,o.jsx)(n.p,{children:"Klogging works really well with Spring Boot, especially in Kotlin code."}),"\n",(0,o.jsxs)(n.p,{children:["You can set Klogging as the logging framework of a Spring Boot application.\nThe ",(0,o.jsx)(n.a,{href:"https://github.com/klogging/klogging-spring-boot-starter",children:"Klogging spring boot starter"}),"\nmakes it simple. See ",(0,o.jsx)(n.a,{href:"#gradle-setup",children:"Gradle setup"})," below for details."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://central.sonatype.com/search?smo=true&q=io.klogging%3Aklogging-spring-boot-starter",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/maven-central/v/io.klogging/klogging-spring-boot-starter.svg?label=maven%20central",alt:"Maven Central"})})}),"\n",(0,o.jsx)(n.h2,{id:"using-klogging-in-spring-boot",children:"Using Klogging in Spring Boot"}),"\n",(0,o.jsx)(n.p,{children:"Firstly, all Spring libraries log via SLF4J and log events will be processed by Klogging."}),"\n",(0,o.jsxs)(n.p,{children:["Similarly, any existing application code that uses SLF4J will also have logs processed by Klogging.\nYou can also create structured log events with SLF4J.\nSee ",(0,o.jsx)(n.a,{href:"/docs/java/slf4j#including-values-in-messages",children:"Including values in messages"})," for more information."]}),"\n",(0,o.jsx)(n.h3,{id:"in-kotlin-code",children:"In Kotlin code"}),"\n",(0,o.jsxs)(n.p,{children:["Spring Boot has first-class support for Kotlin, including coroutines. This means you can\nuse ",(0,o.jsx)(n.code,{children:"suspend"})," functions and all of Klogging\u2019s features for creating structured log events. A simple\nexample might include:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'@RestController\nclass HelloController(\n    val helloService: HelloService,\n) : Klogging {\n\n    @GetMapping("/hello")\n    suspend fun hello(): String {\n        return withLogContext("runId" to UUID.randomUUID()) {\n            logger.info("controller")\n            "Hello ${service.randomName()}"\n        }\n    }\n}\n\n@Component\nclass HelloService() : Klogging {\n    suspend fun randomName(): String {\n        return NAME_LIST.random().also {\n            logger.info("service returning {name}", it)\n        }\n    }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Klogging will produce contextual, structured logs like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"17:49:13.110069  INFO [  reactor-http-nio-2] : .k.h.HelloController : controller : {runId=0132096f-aade-49c7-a345-614da004ba25}\n17:49:13.111007  INFO [  reactor-http-nio-2] : m.s.k.h.HelloService : service returning Thomas : {runId=0132096f-aade-49c7-a345-614da004ba25, name=Thomas}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or in Seq log aggregator:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Two structured log messages shown in Seq log aggregator",src:r(5480).A+"",width:"869",height:"290"})}),"\n",(0,o.jsx)(n.h2,{id:"gradle-setup",children:"Gradle setup"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://search.maven.org/search?q=g:%22io.klogging%22%20AND%20a:%22klogging-spring-boot-starter%22",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/maven-central/v/io.klogging/klogging-spring-boot-starter.svg?label=maven%20central",alt:"Maven Central"})})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Klogging supports Spring Boot versions 3 and later."})}),"\n",(0,o.jsx)(n.p,{children:"Use a Gradle configuration like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'dependencies {\n    // Exclude Logback from any Spring starters that include it.\n    implementation("org.springframework.boot:spring-boot-starter-actuator") {\n        exclude(group = "ch.qos.logback")\n    }\n    implementation("org.springframework.boot:spring-boot-starter-webflux") {\n        exclude(group = "ch.qos.logback")\n    }\n    implementation("io.klogging:klogging-spring-boot-starter:0.5.13")\n    // Other runtime dependencies.\n\n    testImplementation("org.springframework.boot:spring-boot-starter-test") {\n        exclude(group = "ch.qos.logback")\n    }\n    // Other test dependencies.\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Spring uses ",(0,o.jsx)(n.a,{href:"https://www.slf4j.org/",children:"SLF4J"})," for sending logs and\nbundles ",(0,o.jsx)(n.a,{href:"http://logback.qos.ch/",children:"Logback"})," as the default provider. The ",(0,o.jsx)(n.code,{children:"exclude"})," functions shown\nhere\nare needed to exclude Logback from Spring."]}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsx)(n.p,{children:"If your Spring Boot app fails to start with messages like:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"> Task :bootRun FAILED\nSLF4J: Class path contains multiple SLF4J providers.\n"})}),(0,o.jsx)(n.p,{children:"and"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'Exception in thread "main" java.lang.IllegalArgumentException: LoggerFactory is not a Logback LoggerContext but Logback is on the classpath.\n'})}),(0,o.jsxs)(n.p,{children:["you have Spring components that explicitly include Logback, where you need to exclude it, as shown\nabove, including ",(0,o.jsx)(n.code,{children:"spring-boot-starter-test"}),"."]})]}),"\n",(0,o.jsx)(n.h2,{id:"maven-setup",children:"Maven setup"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://search.maven.org/search?q=g:%22io.klogging%22%20AND%20a:%22klogging-spring-boot-starter%22",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/maven-central/v/io.klogging/klogging-spring-boot-starter.svg?label=maven%20central",alt:"Maven Central"})})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Version 0.3.0 supports Spring Boot versions 2.x and 3.x."})}),"\n",(0,o.jsx)(n.p,{children:"Something like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:"\n<dependencies>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-actuator</artifactId>\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-webflux</artifactId>\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  \x3c!-- Other runtime dependencies --\x3e\n\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-test</artifactId>\n    \x3c!-- This exclusion may not be necessary, unlike the Gradle equivalent. --\x3e\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  \x3c!-- Other test dependencies --\x3e\n</dependencies>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"configure-klogging",children:"Configure Klogging"}),"\n",(0,o.jsxs)(n.p,{children:["Put a ",(0,o.jsx)(n.code,{children:"klogging.json"})," file in the ",(0,o.jsx)(n.code,{children:"src/main/resources"})," directory of the project."]}),"\n",(0,o.jsx)(n.p,{children:"Here is a simple one for logging to the console."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "sinks": {\n    "stdout": {\n      "renderWith": "RENDER_ANSI",\n      "sendTo": "STDOUT"\n    }\n  },\n  "logging": [\n    {\n      "levelRanges": [\n        {\n          "fromMinLevel": "INFO",\n          "toSinks": [\n            "stdout"\n          ]\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.RP)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},5680:(e,n,r)=>{r.d(n,{RP:()=>g});var o=r(6540);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,o,t=function(e,n){if(null==e)return{};var r,o,t={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var a=o.createContext({}),g=function(e){var n=o.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=g(r),u=t,h=p["".concat(a,".").concat(u)]||p[u]||c[u]||i;return r?o.createElement(h,s(s({ref:n},d),{},{components:r})):o.createElement(h,s({ref:n},d))}));d.displayName="MDXCreateElement"},5480:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/spring-boot-klogging-logs-5ed460ef5099cc0e565cd8daf453fa10.png"}}]);