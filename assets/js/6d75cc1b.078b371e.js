"use strict";(self.webpackChunkklogging_io=self.webpackChunkklogging_io||[]).push([[5422],{308:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>g,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>a});var t=i(4848),s=i(8453);const l={sidebar_position:30},r="Internal logger",o={id:"internals/internal-logger",title:"Internal logger",description:"Klogging has an internal logger that emits string messages to the console. Its purpose is for",source:"@site/docs/internals/internal-logger.md",sourceDirName:"internals",slug:"/internals/internal-logger",permalink:"/docs/internals/internal-logger",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Log levels and checking",permalink:"/docs/internals/level-checking"}},g={},a=[{value:"Usage",id:"usage",level:2},{value:"Minimum logging level",id:"minimum-logging-level",level:2},{value:"Logging output",id:"logging-output",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"internal-logger",children:"Internal logger"}),"\n",(0,t.jsx)(n.p,{children:"Klogging has an internal logger that emits string messages to the console. Its purpose is for\ndiagnostics on Klogging itself."}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"Klogging uses its internal logger in these ways:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Level"}),(0,t.jsx)(n.th,{children:"Typical use"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"TRACE"}),(0,t.jsx)(n.td,{children:"Detailed tracing of log events through Klogging"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DEBUG"}),(0,t.jsx)(n.td,{children:"Lifecycle events of Klogging components"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"INFO"}),(0,t.jsx)(n.td,{children:"Klogging has read configuration from DSL or file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"WARN"}),(0,t.jsx)(n.td,{children:"There was an error interpreting some configuration"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"minimum-logging-level",children:"Minimum logging level"}),"\n",(0,t.jsxs)(n.p,{children:["The internal logger has a minimum level from which it will emit log messages, set by\nthe \u2018global\u2019 variable ",(0,t.jsx)(n.code,{children:"kloggingMinLogLevel"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The level is ",(0,t.jsx)(n.code,{children:"INFO"})," by default."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["It can be changed by the ",(0,t.jsx)(n.a,{href:"../internals/environment-variables",children:"environment variable"}),"\n",(0,t.jsx)(n.code,{children:"KLOGGING_MIN_LOG_LEVEL"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"logging-output",children:"Logging output"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/klogging/klogging/blob/main/klogging/src/commonMain/kotlin/io/klogging/internal/InternalLogging.kt",children:"The code"}),"\nconstructs log events, renders them as string messages using a specific renderer and sends\nthem to the console."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the logging level is ",(0,t.jsx)(n.code,{children:"INFO"})," or lower, they are sent to the standard output stream."]}),"\n",(0,t.jsxs)(n.li,{children:["If the logging level is ",(0,t.jsx)(n.code,{children:"WARN"})," or higher, they are sent to the standard error stream.\nSome shells will show these messages in a different colour (e.g. red)."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(6540);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);