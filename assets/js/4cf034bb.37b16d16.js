"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[635],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var g=r.createContext({}),c=function(e){var n=r.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(g.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,g=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=c(t),d=o,f=s["".concat(g,".").concat(d)]||s[d]||u[d]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var g in n)hasOwnProperty.call(n,g)&&(l[g]=n[g]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2420:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return g},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],l={sidebar_position:40},g="Hexagon microservices toolkit",c={unversionedId:"java/hexagon",id:"java/hexagon",title:"Hexagon microservices toolkit",description:"Klogging has a logging adapter for the Hexagon microservices toolkit.",source:"@site/docs/java/hexagon.md",sourceDirName:"java",slug:"/java/hexagon",permalink:"/docs/java/hexagon",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Klogging with Spring Boot",permalink:"/docs/java/spring-boot"},next:{title:"Klogging and Ktor",permalink:"/docs/ktor/"}},p={},s=[{value:"Specify dependency",id:"specify-dependency",level:2},{value:"Install the adapter",id:"install-the-adapter",level:2},{value:"Configure Klogging",id:"configure-klogging",level:2}],u={toc:s},d="wrapper";function f(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)(d,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hexagon-microservices-toolkit"},"Hexagon microservices toolkit"),(0,a.kt)("p",null,"Klogging has a logging adapter for the ",(0,a.kt)("a",{parentName:"p",href:"https://hexagonkt.com/"},"Hexagon microservices toolkit"),"."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://search.maven.org/search?q=g:%22io.klogging%22%20AND%20a:%22slf4j-klogging%22"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.klogging/slf4j-klogging.svg?label=maven%20central",alt:"Maven Central"}))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Klogging supports Hexagon toolkit versions 3.4.3 and above, which requires JVM 17.")),(0,a.kt)("h2",{id:"specify-dependency"},"Specify dependency"),(0,a.kt)("p",null,"Specify the adapter dependency in Gradle, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    implementation("com.hexagonkt:http_server_jetty:3.4.3")\n    implementation("io.klogging:hexagonkt-klogging-adapter:0.5.8")\n\n    // etc.\n}\n')),(0,a.kt)("p",null,"Or in Maven, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"\n<dependencies>\n  <dependency>\n    <groupId>com.hexagonkt</groupId>\n    <artifactId>http_server_jetty</artifactId>\n    <version>3.4.3</version>\n  </dependency>\n  <dependency>\n    <groupId>io.klogging</groupId>\n    <artifactId>hexagonkt-klogging-adapter</artifactId>\n    <version>0.5.8</version>\n  </dependency>\n  \x3c!-- etc. --\x3e\n</dependencies>\n")),(0,a.kt)("h2",{id:"install-the-adapter"},"Install the adapter"),(0,a.kt)("p",null,"At the beginning of the main function, set the adapter to use, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun main() {\n    LoggingManager.adapter = KloggingManager()\n    server.start()\n}\n")),(0,a.kt)("h2",{id:"configure-klogging"},"Configure Klogging"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../configuration"},"Configure Klogging")," either using the configuration DSL or a\nconfiguration file in the application classpath. Here is a simple ",(0,a.kt)("inlineCode",{parentName:"p"},"klogging.json")," example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sinks": {\n    "console": {\n      "renderWith": "RENDER_ANSI",\n      "sendTo": "STDOUT"\n    }\n  },\n  "logging": [\n    {\n      "levelRanges": [\n        {\n          "fromMinLevel": "INFO",\n          "toSinks": [\n            "console"\n          ]\n        }\n      ]\n    }\n  ]\n}\n')))}f.isMDXComponent=!0}}]);