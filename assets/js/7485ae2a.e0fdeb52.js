"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[852],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),g=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=g(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},c=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=g(t),d=r,m=c["".concat(s,".").concat(d)]||c[d]||u[d]||a;return t?o.createElement(m,i(i({ref:n},p),{},{components:t})):o.createElement(m,i({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var g=2;g<a;g++)i[g]=t[g];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},2018:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return g},toc:function(){return u}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],l={sidebar_position:10},s="Get started",g={unversionedId:"get-started",id:"get-started",title:"Get started",description:"Get started with Klogging quickly here.",source:"@site/docs/get-started.md",sourceDirName:".",slug:"/get-started",permalink:"/docs/get-started",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",next:{title:"Introduction",permalink:"/docs/introduction"}},p={},u=[{value:"Add Klogging to your application",id:"add-klogging-to-your-application",level:2},{value:"Configure Klogging",id:"configure-klogging",level:2},{value:"Create a logger",id:"create-a-logger",level:2},{value:"Emit log events",id:"emit-log-events",level:2},{value:"I didn\u2019t see any logs!",id:"i-didnt-see-any-logs",level:2},{value:"Using snapshot builds",id:"using-snapshot-builds",level:2}],c={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get-started"},"Get started"),(0,a.kt)("p",null,"Get started with Klogging quickly here."),(0,a.kt)("h2",{id:"add-klogging-to-your-application"},"Add Klogging to your application"),(0,a.kt)("p",null,"Gradle: in ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle.kts"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    implementation("io.klogging:klogging-jvm:0.4.9")\n}\n')),(0,a.kt)("p",null,"Maven: in ",(0,a.kt)("inlineCode",{parentName:"p"},"pom.xml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependencies>\n  <dependency>\n    <groupId>io.klogging</groupId>\n    <artifactId>klogging-jvm</artifactId>\n    <version>0.4.9</version>\n  </dependency>\n</dependencies>\n")),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"See ",(0,a.kt)("a",{parentName:"p",href:"#using-snapshot-builds"},"Using snapshot builds")," below for using current, unreleased builds\nof Klogger."))),(0,a.kt)("h2",{id:"configure-klogging"},"Configure Klogging"),(0,a.kt)("p",null,"To see logs in your console quickly, using the ",(0,a.kt)("a",{parentName:"p",href:"configuration/dsl"},"configuration DSL"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"loggingConfiguration { DEFAULT_CONSOLE() }\n")),(0,a.kt)("p",null,"Or place the file ",(0,a.kt)("inlineCode",{parentName:"p"},"klogging.json")," in a directory on your application\u2019s classpath to use\n",(0,a.kt)("a",{parentName:"p",href:"configuration/json"},"JSON configuration"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "configName": "DEFAULT_CONSOLE"\n}\n')),(0,a.kt)("h2",{id:"create-a-logger"},"Create a logger"),(0,a.kt)("p",null,"To quickly create a ",(0,a.kt)("inlineCode",{parentName:"p"},"Klogger")," instance to log from ",(0,a.kt)("inlineCode",{parentName:"p"},"suspend")," functions, implement the ",(0,a.kt)("inlineCode",{parentName:"p"},"Klogging"),"\ninterface that defines a ",(0,a.kt)("inlineCode",{parentName:"p"},"logger")," property:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"package com.example\n\nclass ThingDoer : Klogging {\n}\n")),(0,a.kt)("h2",{id:"emit-log-events"},"Emit log events"),(0,a.kt)("p",null,"In your class, emit logs using the ",(0,a.kt)("inlineCode",{parentName:"p"},"logger")," property, in a similar way to many logging frameworks:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'    suspend fun doThing() {\n        logger.info("Doing the thing")\n        // Actually do the thing\n    }\n')),(0,a.kt)("p",null,"You will see a log message on your console like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"2021-08-10 22:29:30.300509 INFO [main] com.example.ThingDoer : Doing the thing\n")),(0,a.kt)("h2",{id:"i-didnt-see-any-logs"},"I didn\u2019t see any logs!"),(0,a.kt)("p",null,"If you try out Klogging in a simple command-line program you might not see all the log messages you\nexpect to see. This example will not show the log message on the console:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'suspend fun main() = coroutineScope {\n    loggingConfiguration { DEFAULT_CONSOLE() }\n    val logger = logger("main")\n    logger.info("Hello, world!")\n}\n')),(0,a.kt)("p",null,"Klogging works asynchronously and the program completes before log events can be\nsent. In this case you need to add a coroutine delay or thread sleep before the program completes,\nfor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'suspend fun main() = coroutineScope {\n    loggingConfiguration { DEFAULT_CONSOLE() }\n    val logger = logger("main")\n    logger.info("Hello, world!")\n    delay(50)\n}\n')),(0,a.kt)("h2",{id:"using-snapshot-builds"},"Using snapshot builds"),(0,a.kt)("p",null,"If you want to use the latest snapshot builds, specify these in your ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle.kts"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'repositories {\n    // ...\n    maven {\n        url = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")\n    }\n}\n\ndependencies {\n    // ...\n    implementation("io.klogging:klogging-jvm:0.5.0-SNAPSHOT")\n}\n')))}d.isMDXComponent=!0}}]);