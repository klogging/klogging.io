"use strict";(self.webpackChunkklogging_io=self.webpackChunkklogging_io||[]).push([[531],{767:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"configuration/dsl","title":"Configuration DSL","description":"Klogging has a configuration DSL that makes it easy to get started. Put the configuration","source":"@site/docs/configuration/dsl.md","sourceDirName":"configuration","slug":"/configuration/dsl","permalink":"/docs/configuration/dsl","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/configuration/"},"next":{"title":"Configuration with JSON","permalink":"/docs/configuration/json"}}');var l=i(4848),t=i(8453);const o={sidebar_position:10},r="Configuration DSL",c={},d=[{value:"A simple example",id:"a-simple-example",level:2},{value:"A more complex example",id:"a-more-complex-example",level:2},{value:"Short-circuit matching with <code>stopOnMatch</code>",id:"short-circuit-matching-with-stoponmatch",level:2},{value:"DSL reference",id:"dsl-reference",level:2},{value:"<code>loggingConfiguration</code>",id:"loggingconfiguration",level:3},{value:"<code>sink</code>",id:"sink",level:3},{value:"<code>logging</code>",id:"logging",level:3},{value:"<code>fromLoggerBase</code>, <code>exactLogger</code> and <code>matchLogger</code>",id:"fromloggerbase-exactlogger-and-matchlogger",level:3},{value:"<code>fromMinlevel</code>, <code>toMaxLevel</code>, <code>atLevel</code> and <code>inLevelRange</code>",id:"fromminlevel-tomaxlevel-atlevel-and-inlevelrange",level:3},{value:"<code>toSink</code>",id:"tosink",level:3},{value:"<code>minDirectLogLevel()</code>",id:"mindirectloglevel",level:3},{value:"<code>kloggingMinLogLevel()</code>",id:"kloggingminloglevel",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"configuration-dsl",children:"Configuration DSL"})}),"\n",(0,l.jsx)(n.p,{children:"Klogging has a configuration DSL that makes it easy to get started. Put the configuration\nto run as early as possible in your program."}),"\n",(0,l.jsx)(n.h2,{id:"a-simple-example",children:"A simple example"}),"\n",(0,l.jsx)(n.p,{children:"Here is a simple example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'loggingConfiguration {\n    sink("stdout", RENDER_SIMPLE, STDOUT)\n    sink("seq", seq("http://localhost:5341"))\n    logging {\n        fromLoggerBase("com.example")\n        fromMinLevel(Level.INFO) {\n            toSink("stdout")\n        }\n    }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"This configuration:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["First declares a ",(0,l.jsx)(n.a,{href:"/docs/concepts/sinks",children:"sink"})," called ",(0,l.jsx)(n.code,{children:"stdout"})," that\n",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#rendering",children:"renders"})," each\n",(0,l.jsx)(n.a,{href:"/docs/concepts/log-events",children:"log event"})," into a ",(0,l.jsx)(n.a,{href:"/docs/configuration/built-ins",children:"simple string format"})," and\n",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#sending",children:"sends"})," it to the standard output stream.\nSinks need to be configured first, before they can be used."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Next declares a logging configuration that applies to loggers with names starting\nwith ",(0,l.jsx)(n.code,{children:"com.example"}),". In this configuration, all log events at ",(0,l.jsx)(n.a,{href:"/docs/concepts/levels",children:"severity level"}),"\n",(0,l.jsx)(n.code,{children:"INFO"})," or greater are ",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#sending",children:"sent"})," to the ",(0,l.jsx)(n.code,{children:"stdout"})," sink."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"logging"})," section must follow the ",(0,l.jsx)(n.code,{children:"sink"})," declarations."]})}),"\n",(0,l.jsx)(n.h2,{id:"a-more-complex-example",children:"A more complex example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'loggingConfiguration {\n    sink("stdout", RENDER_SIMPLE, STDOUT)\n    sink("stderr", RENDER_SIMPLE, STDERR)\n    sink("seq", seq(\n        url = "http://seq-server:5341",\n        apiKey = getenv("SEQ_API_KEY")\n    ))\n    sink("auditing", splunkHec(\n        SplunkEndpoint(\n            hecUrl = "https://splunk-server:8088",\n            hecToken = getenv("AUDIT_HEC_TOKEN")!!\n        )\n    ))\n    logging {\n        fromLoggerBase("com.example")\n        atLevel(Level.INFO) {\n            toSink("stdout")\n            toSink("seq")\n        }\n        fromMinLevel(Level.WARN) {\n            toSink("stderr")\n            toSink("seq")\n        }\n    }\n    logging {\n        exactLogger("com.example.service.FancyService")\n        fromMinLevel(Level.DEBUG) { toSink("seq") }\n    }\n    logging {\n        fromLoggerBase("audit")\n        toSink("auditing")\n    }\n    kloggingMinLevel(DEBUG)\n    minDirectLogLevel(INFO)\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"This example has four sinks:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"stdout"})," to the standard output stream;"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"stderr"})," to the standard error stream;"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"seq"})," to a ",(0,l.jsx)(n.a,{href:"https://datalust.co/seq",children:"Seq log aggregator"})," server; and"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"auditing"})," to a ",(0,l.jsx)(n.a,{href:"https://www.splunk.com",children:"Splunk"})," server."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Three logging configurations, which together mean:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Loggers with names starting with ",(0,l.jsx)(n.code,{children:"com.example"})," dispatch their log events:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["all at level ",(0,l.jsx)(n.code,{children:"INFO"})," or greater to sink ",(0,l.jsx)(n.code,{children:"seq"}),";"]}),"\n",(0,l.jsxs)(n.li,{children:["at level ",(0,l.jsx)(n.code,{children:"INFO"})," also to sink ",(0,l.jsx)(n.code,{children:"stdout"}),"; and"]}),"\n",(0,l.jsxs)(n.li,{children:["any at level ",(0,l.jsx)(n.code,{children:"WARN"})," or greater to sink ",(0,l.jsx)(n.code,{children:"stderr"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Logger ",(0,l.jsx)(n.code,{children:"com.example.service.FancyService"})," also dispatches log events with level ",(0,l.jsx)(n.code,{children:"DEBUG"})," to\nsink ",(0,l.jsx)(n.code,{children:"seq"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Loggers with names starting with ",(0,l.jsx)(n.code,{children:"audit"})," dispatch all log events to sink ",(0,l.jsx)(n.code,{children:"auditing"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["This configuration also sets minimum logging levels ",(0,l.jsx)(n.a,{href:"#kloggingminloglevel",children:"for Klogging\u2019s internal\nlogger"})," and ",(0,l.jsx)(n.a,{href:"#mindirectloglevel",children:"for sending log events directly"}),"."]}),"\n",(0,l.jsxs)(n.h2,{id:"short-circuit-matching-with-stoponmatch",children:["Short-circuit matching with ",(0,l.jsx)(n.code,{children:"stopOnMatch"})]}),"\n",(0,l.jsxs)(n.p,{children:["You can reduce log volumes and create detailed logging configurations with short-circuit matching of\nloggers. The logger-matching functions take an optional ",(0,l.jsx)(n.code,{children:"stopOnMatch"})," parameter that specifies\nwhether to continue matching or to stop."]}),"\n",(0,l.jsx)(n.p,{children:"For example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'loggingConfiguration {\n    sink("stdout", RENDER_ANSI, STDOUT)\n    logging {\n        fromLoggerBase("com.example.rest", stopOnMatch = true)\n        fromMinLevel(Level.ERROR) {\n            toSink("stdout")\n        }\n    }\n    logging {\n        fromLoggerBase("com.example")\n        fromMinLevel(Level.DEBUG) {\n            toSink("stdout")\n        }\n    }\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"This configuration specifies:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Loggers with names starting with ",(0,l.jsx)(n.code,{children:"com.example.rest"})," log from level ",(0,l.jsx)(n.code,{children:"ERROR"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["All other loggers with names starting with ",(0,l.jsx)(n.code,{children:"com.example"})," log from level ",(0,l.jsx)(n.code,{children:"DEBUG"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"So logging is as follows:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Logger"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"TRACE"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"DEBUG"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"INFO"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"WARN"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"ERROR"}),(0,l.jsx)(n.th,{style:{textAlign:"center"},children:"FATAL"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"com.example.rest.RestClient"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"}}),(0,l.jsx)(n.td,{style:{textAlign:"center"}}),(0,l.jsx)(n.td,{style:{textAlign:"center"}}),(0,l.jsx)(n.td,{style:{textAlign:"center"}}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"com.example.ExampleClass"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"}}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"com.example.service.HealthService"})}),(0,l.jsx)(n.td,{style:{textAlign:"center"}}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,l.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]})]})]}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:["The order of ",(0,l.jsx)(n.code,{children:"logging"})," functions determines when matching stops."]})}),"\n",(0,l.jsx)(n.h2,{id:"dsl-reference",children:"DSL reference"}),"\n",(0,l.jsx)(n.h3,{id:"loggingconfiguration",children:(0,l.jsx)(n.code,{children:"loggingConfiguration"})}),"\n",(0,l.jsx)(n.p,{children:"This function creates a configuration for the running program. It makes sense to call this as early\nas\npossible in program startup. It uses specifications in the supplied lambda."}),"\n",(0,l.jsx)(n.p,{children:"By default, the configuration replaces any existing one:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:"loggingConfiguration {\n    // ...\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["One scenario for appending a configuration is where the code defines a\ncustom ",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#rendering",children:"renderer"}),"\nor ",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#sending",children:"sender"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'import com.example.customRenderer\n\nloggingConfiguration(append = true) {\n    sink("custom", customRenderer, STDOUT)\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"sink",children:(0,l.jsx)(n.code,{children:"sink"})}),"\n",(0,l.jsxs)(n.p,{children:["This function configures a named sink with a\n",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#rendering",children:"renderer"})," and a\n",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#sending",children:"sender"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"This example configures two sinks:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'    sink("stdout", RENDER_SIMPLE, STDOUT)\n    sink(\n        "seq",\n        seq(\n            url = "https://seq.example.com:45341",\n            apiToken = getenv("SEQ_API_TOKEN")!!,\n            checkCertificate = false,\n        )\n    )\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"stdout"})," sink renders events with the built-in renderer ",(0,l.jsx)(n.code,{children:"RENDER_SIMPLE"})," and dispatches them\nto the standard output using the built-in ",(0,l.jsx)(n.code,{children:"STDOUT"})," dispatcher."]}),"\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.code,{children:"seq"})," sink uses the built-in ",(0,l.jsx)(n.code,{children:"seq"})," function for rendering events in\n",(0,l.jsx)(n.a,{href:"https://clef-json.org/",children:"CLEF"})," compact JSON format and\ndispatching them to a ",(0,l.jsx)(n.a,{href:"https://datalust.co/seq",children:"Seq server"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The server endpoint is ",(0,l.jsx)(n.code,{children:"https://seq.example.com:45341"})]}),"\n",(0,l.jsxs)(n.li,{children:["Get the API token from the running environment key ",(0,l.jsx)(n.code,{children:"SEQ_API_TOKEN"})," (a secret that should be\npassed in via the execution environment)"]}),"\n",(0,l.jsx)(n.li,{children:"Trust the TLS certificate used by the Seq server"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Klogging also supports logging directly to a Splunk ",(0,l.jsx)(n.a,{href:"https://docs.splunk.com/Documentation/Splunk/9.1.0/Data/HECExamples",children:"HTTP Event Collector\n(HEC)"}),", specified using the\n",(0,l.jsx)(n.code,{children:"splunkHec"})," function:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'    splunkHec(\n        SplunkEndpoint(\n            hecUrl = "https://splunk:8088",\n            hecToken = getenv("SPLUNK_HEC_TOKEN")!!,\n            source = "MyApplication",\n            checkCertificate = "true",\n        )\n    )\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"hecUrl"})," specifies the URL of the Splunk server\u2019s HEC endpoint. It uses HTTPS by default."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"hecToken"})," is the HEC token used by Splunk for these logging events. It is a secret\nthat should be passed in via the execution environment."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"index"})," is the Splunk index for the events (optional). If set, it must be a value configured\nin Splunk. If not set, Splunk will use the default index configured for the HEC token."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"sourceType"})," is the Splunk ",(0,l.jsx)(n.code,{children:"sourcetype"})," value (optional). If not set, Splunk will use\n",(0,l.jsx)(n.code,{children:"httpevent"})," or a value configured for the HEC token."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"source"})," is the Splunk ",(0,l.jsx)(n.code,{children:"source"})," value, typically the name of an application (optional).\nIf not set, Splunk will use a name configured with the HEC token."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"checkCertificate"})," indicates whether Klogging should check the TLS certificate used by the\nSplunk server (string: default ",(0,l.jsx)(n.code,{children:'"true"'}),")."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["You can create a\n",(0,l.jsx)(n.a,{href:"/docs/concepts/rendering-and-sending#custom-rendering-and-sending",children:"custom renderer or sender"}),"\nand use it in a sink definition."]}),"\n",(0,l.jsx)(n.h3,{id:"logging",children:(0,l.jsx)(n.code,{children:"logging"})}),"\n",(0,l.jsxs)(n.p,{children:["This function configures logging from specified loggers at specified levels to specified\nsinks. Your configuration must include at least one ",(0,l.jsx)(n.code,{children:"logging"})," function for Klogging to\nemit any logs."]}),"\n",(0,l.jsx)(n.p,{children:"The following sections explain details."}),"\n",(0,l.jsxs)(n.h3,{id:"fromloggerbase-exactlogger-and-matchlogger",children:[(0,l.jsx)(n.code,{children:"fromLoggerBase"}),", ",(0,l.jsx)(n.code,{children:"exactLogger"})," and ",(0,l.jsx)(n.code,{children:"matchLogger"})]}),"\n",(0,l.jsx)(n.p,{children:"These functions specify how to match logger names. For example:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:'fromLoggerBase("com.example")'})," matches all loggers with names that start with ",(0,l.jsx)(n.code,{children:"com.example"}),", such\nas ",(0,l.jsx)(n.code,{children:"com.example.config.ConfigApp"}),", ",(0,l.jsx)(n.code,{children:"com.example.services.BlodgeService"})," etc."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:'exactLogger("com.example.services.GlubService")'})," matches only the logger called\n",(0,l.jsx)(n.code,{children:"com.example.services.GlubService"}),". No other logger with match."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:'matchLogger("Stage-[0-2]")'})," uses\na ",(0,l.jsx)(n.a,{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/-regex/",children:"Kotlin regular expression"}),"\npattern that matches loggers ",(0,l.jsx)(n.code,{children:"Stage-0"}),", ",(0,l.jsx)(n.code,{children:"Stage-1"})," and ",(0,l.jsx)(n.code,{children:"Stage-2"})," but not\n",(0,l.jsx)(n.code,{children:"Stage-3"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["All three functions accept a boolean ",(0,l.jsx)(n.code,{children:"stopOnMatch"})," argument with default value ",(0,l.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsx)(n.p,{children:"These functions are optional: if logger names are not specified, all loggers will match.\nThis configuration is the equivalent of the root logger in Log4j or Logback."})}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsx)(n.p,{children:"In the DSL, the last-used function replaces earlier ones."})}),"\n",(0,l.jsxs)(n.h3,{id:"fromminlevel-tomaxlevel-atlevel-and-inlevelrange",children:[(0,l.jsx)(n.code,{children:"fromMinlevel"}),", ",(0,l.jsx)(n.code,{children:"toMaxLevel"}),", ",(0,l.jsx)(n.code,{children:"atLevel"})," and ",(0,l.jsx)(n.code,{children:"inLevelRange"})]}),"\n",(0,l.jsx)(n.p,{children:"These functions specify the levels at which to dispatch log events. For example:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"fromMinLevel(Level.INFO)"})," enables all events at ",(0,l.jsx)(n.code,{children:"INFO"})," level and above (i.e. more severe:\n",(0,l.jsx)(n.code,{children:"WARN"}),", ",(0,l.jsx)(n.code,{children:"ERROR"})," and ",(0,l.jsx)(n.code,{children:"FATAL"}),") to be dispatched."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"toMaxLevel(Level.INFO)"})," enables all events up to ",(0,l.jsx)(n.code,{children:"INFO"})," level and below (i.e. less\nsevere: ",(0,l.jsx)(n.code,{children:"TRACE"})," and ",(0,l.jsx)(n.code,{children:"DEBUG"}),") to be dispatched."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"atLevel(Level.WARN)"})," enables only events at ",(0,l.jsx)(n.code,{children:"WARN"})," level to be dispatched by matching loggers."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"inLevelRange(Level.DEBUG, Level.WARN)"})," enables all events in the range of levels from ",(0,l.jsx)(n.code,{children:"DEBUG"}),"\nto ",(0,l.jsx)(n.code,{children:"WARN"}),", inclusive."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"The functions accept a lambda to specify which sinks to dispatch to."}),"\n",(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsx)(n.p,{children:"At least one of these functions must be specified or else Klogging will not emit any\nevents for the specified loggers."})}),"\n",(0,l.jsx)(n.h3,{id:"tosink",children:(0,l.jsx)(n.code,{children:"toSink"})}),"\n",(0,l.jsx)(n.p,{children:"This function specifies the name of a sink to dispatch events to. It can be called mulitple times\nfor\na level specification. The sink must have been defined previously by name, otherwise a short warning\nis written to the console and the configuration is ignored."}),"\n",(0,l.jsx)(n.p,{children:"An example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'    fromMinLevel(Level.INFO) {\n        toSink("console")\n        toSink("seq")\n    }\n'})}),"\n",(0,l.jsx)(n.p,{children:"During dispatching, an event is never dispatched to a sink more than once. Given this configuration:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-kotlin",children:'    logging {\n        fromLoggerBase("com.example")\n        fromMinLevel(Level.INFO) {\n            toSink("stdout")\n            toSink("splunk")\n        }\n        fromMinLevel(Level.WARN) {\n            toSink("stderr")\n            toSink("splunk")\n        }\n    }\n'})}),"\n",(0,l.jsxs)(n.p,{children:["An event from logger ",(0,l.jsx)(n.code,{children:"com.example.nurdling.NurdleController"})," at level ",(0,l.jsx)(n.code,{children:"WARN"})," is dispatched\nto ",(0,l.jsx)(n.code,{children:"splunk"})," only once.\nThere is no need to disable additivity as in Log4J and Logback."]}),"\n",(0,l.jsx)(n.h3,{id:"mindirectloglevel",children:(0,l.jsx)(n.code,{children:"minDirectLogLevel()"})}),"\n",(0,l.jsx)(n.p,{children:"This function specifies the minimum level at which log events are sent direct to sinks\ninstead of being sent asynchronously via coroutine channels."}),"\n",(0,l.jsxs)(n.p,{children:["If not specified, the level is that set by the value of ",(0,l.jsx)(n.a,{href:"/docs/internals/environment-variables",children:"environment\nvariable"})," ",(0,l.jsx)(n.code,{children:"KLOGGING_MIN_DIRECT_LOG_LEVEL"}),", which will override\nthe default value ",(0,l.jsx)(n.code,{children:"WARN"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["See ",(0,l.jsx)(n.a,{href:"/docs/concepts/direct-logging",children:"direct logging"})," for details."]}),"\n",(0,l.jsx)(n.h3,{id:"kloggingminloglevel",children:(0,l.jsx)(n.code,{children:"kloggingMinLogLevel()"})}),"\n",(0,l.jsxs)(n.p,{children:["This function sets the minimum level used by the ",(0,l.jsx)(n.a,{href:"/docs/internals/internal-logger",children:"internal logger"}),"\nto decide whether to emit log messages."]}),"\n",(0,l.jsxs)(n.p,{children:["If not specified, the level is that set by the value of ",(0,l.jsx)(n.a,{href:"/docs/internals/environment-variables",children:"environment\nvariable"})," ",(0,l.jsx)(n.code,{children:"KLOGGING_MIN_LOG_LEVEL"}),", which will override the\ndefault value ",(0,l.jsx)(n.code,{children:"INFO"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(6540);const l={},t=s.createContext(l);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);