"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[125],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var o=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),s=p(n),g=r,f=s["".concat(l,".").concat(g)]||s[g]||m[g]||i;return n?o.createElement(f,c(c({ref:t},u),{},{components:n})):o.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=g;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[s]="string"==typeof e?e:r,c[1]=a;for(var p=2;p<i;p++)c[p]=n[p];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7761:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=n(8168),r=(n(6540),n(5680));const i={sidebar_position:40},c="From other coroutine contexts",a={unversionedId:"context/other-coroutine-context",id:"context/other-coroutine-context",title:"From other coroutine contexts",description:"Klogging can include information from other coroutine context elements.",source:"@site/docs/context/other-coroutine-context.md",sourceDirName:"context",slug:"/context/other-coroutine-context",permalink:"/docs/context/other-coroutine-context",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Immediate context items",permalink:"/docs/context/immediate-context-items"},next:{title:"From other sources",permalink:"/docs/context/other-context"}},l={},p=[],u={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(s,(0,o.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"from-other-coroutine-contexts"},"From other coroutine contexts"),(0,r.yg)("p",null,"Klogging can include information from other coroutine context elements."),(0,r.yg)("p",null,"As an example, if your application is using ",(0,r.yg)("a",{parentName:"p",href:"https://projectreactor.io/"},"Project Reactor"),", you can\nstore information in a Reactor ",(0,r.yg)("inlineCode",{parentName:"p"},"Context")," and wrap that in a coroutine ",(0,r.yg)("inlineCode",{parentName:"p"},"ReactorContext"),"."),(0,r.yg)("p",null,"Configure Klogging to use all the values from the Reactor context in log events (",(0,r.yg)("inlineCode",{parentName:"p"},"EventItems")," is a\nconvenient type alias for ",(0,r.yg)("inlineCode",{parentName:"p"},"Map<String, Any?>"),"):"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-kotlin"},"import io.klogging.config.Context\nimport io.klogging.events.EventItems\nimport kotlinx.coroutines.reactor.ReactorContext\n\nval reactorExtractor: (ReactorContext) -> EventItems = { ctx ->\n    // TBC\n}\n\nContext.addContextItemExtractor(ReactorContext, reactorExtractor)\n")),(0,r.yg)("p",null,"Any log events emitted within the scope of the Reactor context will include items returned by the\n",(0,r.yg)("inlineCode",{parentName:"p"},"reactorExtractor()")," function from that context."))}m.isMDXComponent=!0}}]);