"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[380],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var g=o.createContext({}),s=function(e){var n=o.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(g.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,g=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,m=c["".concat(g,".").concat(d)]||c[d]||u[d]||i;return t?o.createElement(m,a(a({ref:n},p),{},{components:t})):o.createElement(m,a({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var g in n)hasOwnProperty.call(n,g)&&(l[g]=n[g]);l.originalType=e,l[c]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6063:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return g},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),a=["components"],l={sidebar_position:30},g="Klogging with Spring Boot",s={unversionedId:"java/spring-boot",id:"java/spring-boot",title:"Klogging with Spring Boot",description:"Klogging works really well with Spring Boot, especially in Kotlin code.",source:"@site/docs/java/spring-boot.md",sourceDirName:"java",slug:"/java/spring-boot",permalink:"/docs/java/spring-boot",draft:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Using SLF4J",permalink:"/docs/java/slf4j"},next:{title:"Klogging and Ktor",permalink:"/docs/ktor/"}},p={},c=[{value:"Using Klogging in Spring Boot",id:"using-klogging-in-spring-boot",level:2},{value:"In Kotlin code",id:"in-kotlin-code",level:3},{value:"Gradle setup",id:"gradle-setup",level:2},{value:"Maven setup",id:"maven-setup",level:2},{value:"Configure Klogging",id:"configure-klogging",level:2}],u={toc:c},d="wrapper";function m(e){var n=e.components,l=(0,r.Z)(e,a);return(0,i.kt)(d,(0,o.Z)({},u,l,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"klogging-with-spring-boot"},"Klogging with Spring Boot"),(0,i.kt)("p",null,"Klogging works really well with Spring Boot, especially in Kotlin code."),(0,i.kt)("p",null,"You can set Klogging as the logging framework of a Spring Boot application.\nThe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/klogging/klogging-spring-boot-starter"},"Klogging spring boot starter"),"\nmakes it simple. See ",(0,i.kt)("a",{parentName:"p",href:"#gradle-setup"},"Gradle setup")," below for details."),(0,i.kt)("h2",{id:"using-klogging-in-spring-boot"},"Using Klogging in Spring Boot"),(0,i.kt)("p",null,"Firstly, all Spring libraries log via SLF4J and log events will be processed by Klogging."),(0,i.kt)("p",null,"Similarly, any existing application code that uses SLF4J will also have logs processed by Klogging.\nYou can also create structured log events with SLF4J.\nSee ",(0,i.kt)("a",{parentName:"p",href:"/docs/java/slf4j#including-values-in-messages"},"Including values in messages")," for more information."),(0,i.kt)("h3",{id:"in-kotlin-code"},"In Kotlin code"),(0,i.kt)("p",null,"Spring Boot has first-class support for Kotlin, including coroutines. This means you can\nuse ",(0,i.kt)("inlineCode",{parentName:"p"},"suspend")," functions and all of Klogging\u2019s features for creating structured log events. A simple\nexample might include:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'@RestController\nclass HelloController(\n    val helloService: HelloService,\n) : Klogging {\n\n    @GetMapping("/hello")\n    suspend fun hello(): String {\n        return withLogContext("runId" to UUID.randomUUID()) {\n            logger.info("controller")\n            "Hello ${service.randomName()}"\n        }\n    }\n}\n\n@Component\nclass HelloService() : Klogging {\n    suspend fun randomName(): String {\n        return NAME_LIST.random().also {\n            logger.info("service returning {name}", it)\n        }\n    }\n}\n')),(0,i.kt)("p",null,"Klogging will produce contextual, structured logs like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"17:49:13.110069  INFO [  reactor-http-nio-2] : .k.h.HelloController : controller : {runId=0132096f-aade-49c7-a345-614da004ba25}\n17:49:13.111007  INFO [  reactor-http-nio-2] : m.s.k.h.HelloService : service returning Thomas : {runId=0132096f-aade-49c7-a345-614da004ba25, name=Thomas}\n")),(0,i.kt)("p",null,"Or in Seq log aggregator:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Two structured log messages shown in Seq log aggregator",src:t(9447).Z,width:"869",height:"290"})),(0,i.kt)("h2",{id:"gradle-setup"},"Gradle setup"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://search.maven.org/search?q=g:%22io.klogging%22%20AND%20a:%22klogging-spring-boot-starter%22"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.klogging/klogging-spring-boot-starter.svg?label=maven%20central",alt:"Maven Central"}))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Versions 0.3.0 and later supports Spring Boot versions 2.x and 3.x.")),(0,i.kt)("p",null,"Use a Gradle configuration like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    // Exclude Logback from any Spring starters that include it.\n    implementation("org.springframework.boot:spring-boot-starter-actuator") {\n        exclude(group = "ch.qos.logback")\n    }\n    implementation("org.springframework.boot:spring-boot-starter-webflux") {\n        exclude(group = "ch.qos.logback")\n    }\n    implementation("io.klogging:klogging-spring-boot-starter:0.5.0")\n    // Other runtime dependencies.\n\n    testImplementation("org.springframework.boot:spring-boot-starter-test") {\n        exclude(group = "ch.qos.logback")\n    }\n    // Other test dependencies.\n}\n')),(0,i.kt)("p",null,"Spring uses ",(0,i.kt)("a",{parentName:"p",href:"https://www.slf4j.org/"},"SLF4J")," for sending logs and\nbundles ",(0,i.kt)("a",{parentName:"p",href:"http://logback.qos.ch/"},"Logback")," as the default provider. The ",(0,i.kt)("inlineCode",{parentName:"p"},"exclude")," functions shown here\nare needed to exclude Logback from Spring."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If your Spring Boot app fails to start with messages like:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre"},"> Task :bootRun FAILED\nSLF4J: Class path contains multiple SLF4J providers.\n")),(0,i.kt)("p",{parentName:"admonition"},"and"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre"},'Exception in thread "main" java.lang.IllegalArgumentException: LoggerFactory is not a Logback LoggerContext but Logback is on the classpath.\n')),(0,i.kt)("p",{parentName:"admonition"},"you have Spring components that explicitly include Logback, where you need to exclude it, as shown\nabove, including ",(0,i.kt)("inlineCode",{parentName:"p"},"spring-boot-starter-test"),".")),(0,i.kt)("h2",{id:"maven-setup"},"Maven setup"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://search.maven.org/search?q=g:%22io.klogging%22%20AND%20a:%22klogging-spring-boot-starter%22"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.klogging/klogging-spring-boot-starter.svg?label=maven%20central",alt:"Maven Central"}))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Version 0.3.0 supports Spring Boot versions 2.x and 3.x.")),(0,i.kt)("p",null,"Something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<dependencies>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-actuator</artifactId>\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-webflux</artifactId>\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  \x3c!-- Other runtime dependencies --\x3e\n\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-test</artifactId>\n    \x3c!-- This exclusion may not be necessary, unlike the Gradle equivalent. --\x3e\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  \x3c!-- Other test dependencies --\x3e\n</dependencies>\n")),(0,i.kt)("h2",{id:"configure-klogging"},"Configure Klogging"),(0,i.kt)("p",null,"Put a ",(0,i.kt)("inlineCode",{parentName:"p"},"klogging.json")," file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"src/main/resources")," directory of the project."),(0,i.kt)("p",null,"Here is a simple one for logging to the console."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sinks": {\n    "stdout": {\n      "renderWith": "RENDER_ANSI",\n      "sendTo": "STDOUT"\n    }\n  },\n  "logging": [\n    {\n      "levelRanges": [\n        {\n          "fromMinLevel": "INFO",\n          "toSinks": [\n            "stdout"\n          ]\n        }\n      ]\n    }\n  ]\n}\n')))}m.isMDXComponent=!0},9447:function(e,n,t){n.Z=t.p+"assets/images/spring-boot-klogging-logs-5ed460ef5099cc0e565cd8daf453fa10.png"}}]);