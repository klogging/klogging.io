"use strict";(self.webpackChunkklogging=self.webpackChunkklogging||[]).push([[380],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),g=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=g(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=g(t),d=o,m=u["".concat(s,".").concat(d)]||u[d]||l[d]||a;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var g=2;g<a;g++)i[g]=t[g];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4196:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return g},toc:function(){return c},default:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],p={sidebar_position:30},s="Klogging with Spring Boot",g={unversionedId:"java/spring-boot",id:"java/spring-boot",isDocsHomePage:!1,title:"Klogging with Spring Boot",description:"You can use Klogging as the logging framework of a Spring Boot application.",source:"@site/docs/java/spring-boot.md",sourceDirName:"java",slug:"/java/spring-boot",permalink:"/docs/java/spring-boot",version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Using SLF4J",permalink:"/docs/java/slf4j"},next:{title:"Klogging internal process",permalink:"/docs/concepts/klogging-process"}},c=[{value:"Gradle setup",id:"gradle-setup",children:[]},{value:"Maven setup",id:"maven-setup",children:[]},{value:"Configure Klogging",id:"configure-klogging",children:[]}],l={toc:c};function u(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"klogging-with-spring-boot"},"Klogging with Spring Boot"),(0,a.kt)("p",null,"You can use Klogging as the logging framework of a Spring Boot application.\nThe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/klogging/klogging-spring-boot-starter"},"Klogging spring boot starter"),"\nmakes it simple."),(0,a.kt)("h2",{id:"gradle-setup"},"Gradle setup"),(0,a.kt)("p",null,"Use a Gradle configuration like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    // Exclude Logback from any Spring starters that include it.\n    implementation("org.springframework.boot:spring-boot-starter-actuator") {\n        exclude(group = "ch.qos.logback")\n    }\n    implementation("org.springframework.boot:spring-boot-starter-webflux") {\n        exclude(group = "ch.qos.logback")\n    }\n    implementation("io.klogging:klogging-spring-boot-starter:0.2.2")\n    // Other runtime dependencies.\n\n    testImplementation("org.springframework.boot:spring-boot-starter-test") {\n        exclude(group = "ch.qos.logback")\n    }\n    // Other test dependencies.\n}\n')),(0,a.kt)("p",null,"Spring uses ",(0,a.kt)("a",{parentName:"p",href:"https://www.slf4j.org/"},"SLF4J")," for sending logs and bundles ",(0,a.kt)("a",{parentName:"p",href:"http://logback.qos.ch/"},"Logback"),"\nas the default binding. The ",(0,a.kt)("inlineCode",{parentName:"p"},"exclude")," functions shown here are needed to exclude Logback from Spring."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"If your Spring Boot app fails to start with messages like:"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre"},"> Task :bootRun FAILED\nSLF4J: Class path contains multiple SLF4J bindings.\n")),(0,a.kt)("p",{parentName:"div"},"and"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre"},'Exception in thread "main" java.lang.IllegalArgumentException: LoggerFactory is not a Logback LoggerContext but Logback is on the classpath.\n')),(0,a.kt)("p",{parentName:"div"},"you have Spring components that explicitly include Logback, where you need to exclude it, as shown above."))),(0,a.kt)("h2",{id:"maven-setup"},"Maven setup"),(0,a.kt)("p",null,"Something like this (not tested):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"\n<dependencies>\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter</artifactId>\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  <dependency>\n    <groupId>io.klogging</groupId>\n    <artifactId>klogging-spring-boot-starter</artifactId>\n    <version>0.2.2</version>\n    <type>pom</type>\n  </dependency>\n  \x3c!-- Other runtime dependencies --\x3e\n\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-test</artifactId>\n    <exclusions>\n      <exclusion>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n  \x3c!-- Other test dependencies --\x3e\n</dependencies>\n")),(0,a.kt)("h2",{id:"configure-klogging"},"Configure Klogging"),(0,a.kt)("p",null,"Put a ",(0,a.kt)("inlineCode",{parentName:"p"},"logging.json")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"src/main/resources")," directory of the project."),(0,a.kt)("p",null,"Here is a simple one for logging to the console."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sinks": {\n    "stdout": {\n      "renderWith": "RENDER_ANSI",\n      "dispatchTo": "STDOUT"\n    }\n  },\n  "logging": [\n    {\n      "levelRanges": [\n        {\n          "fromMinLevel": "INFO",\n          "toSinks": [\n            "stdout"\n          ]\n        }\n      ]\n    }\n  ]\n}\n')))}u.isMDXComponent=!0}}]);